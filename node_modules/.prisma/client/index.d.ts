
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model company
 * 
 */
export type company = $Result.DefaultSelection<Prisma.$companyPayload>
/**
 * Model whatsappOficial
 * 
 */
export type whatsappOficial = $Result.DefaultSelection<Prisma.$whatsappOficialPayload>
/**
 * Model sendMessageWhatsApp
 * 
 */
export type sendMessageWhatsApp = $Result.DefaultSelection<Prisma.$sendMessageWhatsAppPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const typeMessage: {
  text: 'text',
  reaction: 'reaction',
  audio: 'audio',
  document: 'document',
  image: 'image',
  sticker: 'sticker',
  video: 'video',
  location: 'location',
  contacts: 'contacts',
  interactive: 'interactive',
  template: 'template'
};

export type typeMessage = (typeof typeMessage)[keyof typeof typeMessage]

}

export type typeMessage = $Enums.typeMessage

export const typeMessage: typeof $Enums.typeMessage

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Companies
 * const companies = await prisma.company.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Companies
   * const companies = await prisma.company.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.company`: Exposes CRUD operations for the **company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.companyDelegate<ExtArgs>;

  /**
   * `prisma.whatsappOficial`: Exposes CRUD operations for the **whatsappOficial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WhatsappOficials
    * const whatsappOficials = await prisma.whatsappOficial.findMany()
    * ```
    */
  get whatsappOficial(): Prisma.whatsappOficialDelegate<ExtArgs>;

  /**
   * `prisma.sendMessageWhatsApp`: Exposes CRUD operations for the **sendMessageWhatsApp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SendMessageWhatsApps
    * const sendMessageWhatsApps = await prisma.sendMessageWhatsApp.findMany()
    * ```
    */
  get sendMessageWhatsApp(): Prisma.sendMessageWhatsAppDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    company: 'company',
    whatsappOficial: 'whatsappOficial',
    sendMessageWhatsApp: 'sendMessageWhatsApp'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "company" | "whatsappOficial" | "sendMessageWhatsApp"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      company: {
        payload: Prisma.$companyPayload<ExtArgs>
        fields: Prisma.companyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.companyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.companyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          findFirst: {
            args: Prisma.companyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.companyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          findMany: {
            args: Prisma.companyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>[]
          }
          create: {
            args: Prisma.companyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          createMany: {
            args: Prisma.companyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.companyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>[]
          }
          delete: {
            args: Prisma.companyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          update: {
            args: Prisma.companyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          deleteMany: {
            args: Prisma.companyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.companyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.companyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.companyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.companyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      whatsappOficial: {
        payload: Prisma.$whatsappOficialPayload<ExtArgs>
        fields: Prisma.whatsappOficialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.whatsappOficialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.whatsappOficialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>
          }
          findFirst: {
            args: Prisma.whatsappOficialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.whatsappOficialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>
          }
          findMany: {
            args: Prisma.whatsappOficialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>[]
          }
          create: {
            args: Prisma.whatsappOficialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>
          }
          createMany: {
            args: Prisma.whatsappOficialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.whatsappOficialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>[]
          }
          delete: {
            args: Prisma.whatsappOficialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>
          }
          update: {
            args: Prisma.whatsappOficialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>
          }
          deleteMany: {
            args: Prisma.whatsappOficialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.whatsappOficialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.whatsappOficialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$whatsappOficialPayload>
          }
          aggregate: {
            args: Prisma.WhatsappOficialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWhatsappOficial>
          }
          groupBy: {
            args: Prisma.whatsappOficialGroupByArgs<ExtArgs>
            result: $Utils.Optional<WhatsappOficialGroupByOutputType>[]
          }
          count: {
            args: Prisma.whatsappOficialCountArgs<ExtArgs>
            result: $Utils.Optional<WhatsappOficialCountAggregateOutputType> | number
          }
        }
      }
      sendMessageWhatsApp: {
        payload: Prisma.$sendMessageWhatsAppPayload<ExtArgs>
        fields: Prisma.sendMessageWhatsAppFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sendMessageWhatsAppFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sendMessageWhatsAppFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>
          }
          findFirst: {
            args: Prisma.sendMessageWhatsAppFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sendMessageWhatsAppFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>
          }
          findMany: {
            args: Prisma.sendMessageWhatsAppFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>[]
          }
          create: {
            args: Prisma.sendMessageWhatsAppCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>
          }
          createMany: {
            args: Prisma.sendMessageWhatsAppCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sendMessageWhatsAppCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>[]
          }
          delete: {
            args: Prisma.sendMessageWhatsAppDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>
          }
          update: {
            args: Prisma.sendMessageWhatsAppUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>
          }
          deleteMany: {
            args: Prisma.sendMessageWhatsAppDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sendMessageWhatsAppUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sendMessageWhatsAppUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sendMessageWhatsAppPayload>
          }
          aggregate: {
            args: Prisma.SendMessageWhatsAppAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSendMessageWhatsApp>
          }
          groupBy: {
            args: Prisma.sendMessageWhatsAppGroupByArgs<ExtArgs>
            result: $Utils.Optional<SendMessageWhatsAppGroupByOutputType>[]
          }
          count: {
            args: Prisma.sendMessageWhatsAppCountArgs<ExtArgs>
            result: $Utils.Optional<SendMessageWhatsAppCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    whatsappOficial: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    whatsappOficial?: boolean | CompanyCountOutputTypeCountWhatsappOficialArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountWhatsappOficialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsappOficialWhereInput
  }


  /**
   * Count Type WhatsappOficialCountOutputType
   */

  export type WhatsappOficialCountOutputType = {
    sendMessageWhatsApp: number
  }

  export type WhatsappOficialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sendMessageWhatsApp?: boolean | WhatsappOficialCountOutputTypeCountSendMessageWhatsAppArgs
  }

  // Custom InputTypes
  /**
   * WhatsappOficialCountOutputType without action
   */
  export type WhatsappOficialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WhatsappOficialCountOutputType
     */
    select?: WhatsappOficialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * WhatsappOficialCountOutputType without action
   */
  export type WhatsappOficialCountOutputTypeCountSendMessageWhatsAppArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sendMessageWhatsAppWhereInput
  }


  /**
   * Models
   */

  /**
   * Model company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    id: number | null
    idEmpresaMult100: number | null
  }

  export type CompanySumAggregateOutputType = {
    id: number | null
    idEmpresaMult100: number | null
  }

  export type CompanyMinAggregateOutputType = {
    id: number | null
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    name: string | null
    idEmpresaMult100: number | null
    token: string | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: number | null
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    name: string | null
    idEmpresaMult100: number | null
    token: string | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    create_at: number
    update_at: number
    deleted_at: number
    name: number
    idEmpresaMult100: number
    token: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    id?: true
    idEmpresaMult100?: true
  }

  export type CompanySumAggregateInputType = {
    id?: true
    idEmpresaMult100?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    name?: true
    idEmpresaMult100?: true
    token?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    name?: true
    idEmpresaMult100?: true
    token?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    name?: true
    idEmpresaMult100?: true
    token?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which company to aggregate.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type companyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: companyWhereInput
    orderBy?: companyOrderByWithAggregationInput | companyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: companyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: number
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    name: string
    idEmpresaMult100: number
    token: string
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends companyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type companySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    name?: boolean
    idEmpresaMult100?: boolean
    token?: boolean
    whatsappOficial?: boolean | company$whatsappOficialArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type companySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    name?: boolean
    idEmpresaMult100?: boolean
    token?: boolean
  }, ExtArgs["result"]["company"]>

  export type companySelectScalar = {
    id?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    name?: boolean
    idEmpresaMult100?: boolean
    token?: boolean
  }

  export type companyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    whatsappOficial?: boolean | company$whatsappOficialArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type companyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $companyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "company"
    objects: {
      whatsappOficial: Prisma.$whatsappOficialPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      create_at: Date | null
      update_at: Date | null
      deleted_at: Date | null
      name: string
      idEmpresaMult100: number
      token: string
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type companyGetPayload<S extends boolean | null | undefined | companyDefaultArgs> = $Result.GetResult<Prisma.$companyPayload, S>

  type companyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<companyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface companyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['company'], meta: { name: 'company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {companyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends companyFindUniqueArgs>(args: SelectSubset<T, companyFindUniqueArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {companyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends companyFindUniqueOrThrowArgs>(args: SelectSubset<T, companyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends companyFindFirstArgs>(args?: SelectSubset<T, companyFindFirstArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends companyFindFirstOrThrowArgs>(args?: SelectSubset<T, companyFindFirstOrThrowArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends companyFindManyArgs>(args?: SelectSubset<T, companyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Company.
     * @param {companyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends companyCreateArgs>(args: SelectSubset<T, companyCreateArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Companies.
     * @param {companyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends companyCreateManyArgs>(args?: SelectSubset<T, companyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Companies and returns the data saved in the database.
     * @param {companyCreateManyAndReturnArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Companies and only return the `id`
     * const companyWithIdOnly = await prisma.company.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends companyCreateManyAndReturnArgs>(args?: SelectSubset<T, companyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Company.
     * @param {companyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends companyDeleteArgs>(args: SelectSubset<T, companyDeleteArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Company.
     * @param {companyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends companyUpdateArgs>(args: SelectSubset<T, companyUpdateArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Companies.
     * @param {companyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends companyDeleteManyArgs>(args?: SelectSubset<T, companyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends companyUpdateManyArgs>(args: SelectSubset<T, companyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {companyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends companyUpsertArgs>(args: SelectSubset<T, companyUpsertArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends companyCountArgs>(
      args?: Subset<T, companyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends companyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: companyGroupByArgs['orderBy'] }
        : { orderBy?: companyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, companyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the company model
   */
  readonly fields: companyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__companyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    whatsappOficial<T extends company$whatsappOficialArgs<ExtArgs> = {}>(args?: Subset<T, company$whatsappOficialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the company model
   */ 
  interface companyFieldRefs {
    readonly id: FieldRef<"company", 'Int'>
    readonly create_at: FieldRef<"company", 'DateTime'>
    readonly update_at: FieldRef<"company", 'DateTime'>
    readonly deleted_at: FieldRef<"company", 'DateTime'>
    readonly name: FieldRef<"company", 'String'>
    readonly idEmpresaMult100: FieldRef<"company", 'Int'>
    readonly token: FieldRef<"company", 'String'>
  }
    

  // Custom InputTypes
  /**
   * company findUnique
   */
  export type companyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company findUniqueOrThrow
   */
  export type companyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company findFirst
   */
  export type companyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companies.
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * company findFirstOrThrow
   */
  export type companyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companies.
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * company findMany
   */
  export type companyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which companies to fetch.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing companies.
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * company create
   */
  export type companyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * The data needed to create a company.
     */
    data: XOR<companyCreateInput, companyUncheckedCreateInput>
  }

  /**
   * company createMany
   */
  export type companyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many companies.
     */
    data: companyCreateManyInput | companyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * company createManyAndReturn
   */
  export type companyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many companies.
     */
    data: companyCreateManyInput | companyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * company update
   */
  export type companyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * The data needed to update a company.
     */
    data: XOR<companyUpdateInput, companyUncheckedUpdateInput>
    /**
     * Choose, which company to update.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company updateMany
   */
  export type companyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update companies.
     */
    data: XOR<companyUpdateManyMutationInput, companyUncheckedUpdateManyInput>
    /**
     * Filter which companies to update
     */
    where?: companyWhereInput
  }

  /**
   * company upsert
   */
  export type companyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * The filter to search for the company to update in case it exists.
     */
    where: companyWhereUniqueInput
    /**
     * In case the company found by the `where` argument doesn't exist, create a new company with this data.
     */
    create: XOR<companyCreateInput, companyUncheckedCreateInput>
    /**
     * In case the company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<companyUpdateInput, companyUncheckedUpdateInput>
  }

  /**
   * company delete
   */
  export type companyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter which company to delete.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company deleteMany
   */
  export type companyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which companies to delete
     */
    where?: companyWhereInput
  }

  /**
   * company.whatsappOficial
   */
  export type company$whatsappOficialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    where?: whatsappOficialWhereInput
    orderBy?: whatsappOficialOrderByWithRelationInput | whatsappOficialOrderByWithRelationInput[]
    cursor?: whatsappOficialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WhatsappOficialScalarFieldEnum | WhatsappOficialScalarFieldEnum[]
  }

  /**
   * company without action
   */
  export type companyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
  }


  /**
   * Model whatsappOficial
   */

  export type AggregateWhatsappOficial = {
    _count: WhatsappOficialCountAggregateOutputType | null
    _avg: WhatsappOficialAvgAggregateOutputType | null
    _sum: WhatsappOficialSumAggregateOutputType | null
    _min: WhatsappOficialMinAggregateOutputType | null
    _max: WhatsappOficialMaxAggregateOutputType | null
  }

  export type WhatsappOficialAvgAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type WhatsappOficialSumAggregateOutputType = {
    id: number | null
    companyId: number | null
  }

  export type WhatsappOficialMinAggregateOutputType = {
    id: number | null
    phone_number_id: string | null
    waba_id: string | null
    send_token: string | null
    business_id: string | null
    phone_number: string | null
    companyId: number | null
    use_rabbitmq: boolean | null
    token_mult100: string | null
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    chatwoot_webhook_url: string | null
    auth_token_chatwoot: string | null
    n8n_webhook_url: string | null
    auth_token_n8n: string | null
    crm_webhook_url: string | null
    auth_token_crm: string | null
    typebot_webhook_url: string | null
    auth_token_typebot: string | null
    rabbitmq_exchange: string | null
    rabbitmq_queue: string | null
    rabbitmq_routing_key: string | null
  }

  export type WhatsappOficialMaxAggregateOutputType = {
    id: number | null
    phone_number_id: string | null
    waba_id: string | null
    send_token: string | null
    business_id: string | null
    phone_number: string | null
    companyId: number | null
    use_rabbitmq: boolean | null
    token_mult100: string | null
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    chatwoot_webhook_url: string | null
    auth_token_chatwoot: string | null
    n8n_webhook_url: string | null
    auth_token_n8n: string | null
    crm_webhook_url: string | null
    auth_token_crm: string | null
    typebot_webhook_url: string | null
    auth_token_typebot: string | null
    rabbitmq_exchange: string | null
    rabbitmq_queue: string | null
    rabbitmq_routing_key: string | null
  }

  export type WhatsappOficialCountAggregateOutputType = {
    id: number
    phone_number_id: number
    waba_id: number
    send_token: number
    business_id: number
    phone_number: number
    companyId: number
    use_rabbitmq: number
    token_mult100: number
    create_at: number
    update_at: number
    deleted_at: number
    chatwoot_webhook_url: number
    auth_token_chatwoot: number
    n8n_webhook_url: number
    auth_token_n8n: number
    crm_webhook_url: number
    auth_token_crm: number
    typebot_webhook_url: number
    auth_token_typebot: number
    rabbitmq_exchange: number
    rabbitmq_queue: number
    rabbitmq_routing_key: number
    _all: number
  }


  export type WhatsappOficialAvgAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type WhatsappOficialSumAggregateInputType = {
    id?: true
    companyId?: true
  }

  export type WhatsappOficialMinAggregateInputType = {
    id?: true
    phone_number_id?: true
    waba_id?: true
    send_token?: true
    business_id?: true
    phone_number?: true
    companyId?: true
    use_rabbitmq?: true
    token_mult100?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    chatwoot_webhook_url?: true
    auth_token_chatwoot?: true
    n8n_webhook_url?: true
    auth_token_n8n?: true
    crm_webhook_url?: true
    auth_token_crm?: true
    typebot_webhook_url?: true
    auth_token_typebot?: true
    rabbitmq_exchange?: true
    rabbitmq_queue?: true
    rabbitmq_routing_key?: true
  }

  export type WhatsappOficialMaxAggregateInputType = {
    id?: true
    phone_number_id?: true
    waba_id?: true
    send_token?: true
    business_id?: true
    phone_number?: true
    companyId?: true
    use_rabbitmq?: true
    token_mult100?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    chatwoot_webhook_url?: true
    auth_token_chatwoot?: true
    n8n_webhook_url?: true
    auth_token_n8n?: true
    crm_webhook_url?: true
    auth_token_crm?: true
    typebot_webhook_url?: true
    auth_token_typebot?: true
    rabbitmq_exchange?: true
    rabbitmq_queue?: true
    rabbitmq_routing_key?: true
  }

  export type WhatsappOficialCountAggregateInputType = {
    id?: true
    phone_number_id?: true
    waba_id?: true
    send_token?: true
    business_id?: true
    phone_number?: true
    companyId?: true
    use_rabbitmq?: true
    token_mult100?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    chatwoot_webhook_url?: true
    auth_token_chatwoot?: true
    n8n_webhook_url?: true
    auth_token_n8n?: true
    crm_webhook_url?: true
    auth_token_crm?: true
    typebot_webhook_url?: true
    auth_token_typebot?: true
    rabbitmq_exchange?: true
    rabbitmq_queue?: true
    rabbitmq_routing_key?: true
    _all?: true
  }

  export type WhatsappOficialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsappOficial to aggregate.
     */
    where?: whatsappOficialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsappOficials to fetch.
     */
    orderBy?: whatsappOficialOrderByWithRelationInput | whatsappOficialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: whatsappOficialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsappOficials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsappOficials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned whatsappOficials
    **/
    _count?: true | WhatsappOficialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WhatsappOficialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WhatsappOficialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WhatsappOficialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WhatsappOficialMaxAggregateInputType
  }

  export type GetWhatsappOficialAggregateType<T extends WhatsappOficialAggregateArgs> = {
        [P in keyof T & keyof AggregateWhatsappOficial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWhatsappOficial[P]>
      : GetScalarType<T[P], AggregateWhatsappOficial[P]>
  }




  export type whatsappOficialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: whatsappOficialWhereInput
    orderBy?: whatsappOficialOrderByWithAggregationInput | whatsappOficialOrderByWithAggregationInput[]
    by: WhatsappOficialScalarFieldEnum[] | WhatsappOficialScalarFieldEnum
    having?: whatsappOficialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WhatsappOficialCountAggregateInputType | true
    _avg?: WhatsappOficialAvgAggregateInputType
    _sum?: WhatsappOficialSumAggregateInputType
    _min?: WhatsappOficialMinAggregateInputType
    _max?: WhatsappOficialMaxAggregateInputType
  }

  export type WhatsappOficialGroupByOutputType = {
    id: number
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    companyId: number
    use_rabbitmq: boolean
    token_mult100: string
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    chatwoot_webhook_url: string | null
    auth_token_chatwoot: string | null
    n8n_webhook_url: string | null
    auth_token_n8n: string | null
    crm_webhook_url: string | null
    auth_token_crm: string | null
    typebot_webhook_url: string | null
    auth_token_typebot: string | null
    rabbitmq_exchange: string | null
    rabbitmq_queue: string | null
    rabbitmq_routing_key: string | null
    _count: WhatsappOficialCountAggregateOutputType | null
    _avg: WhatsappOficialAvgAggregateOutputType | null
    _sum: WhatsappOficialSumAggregateOutputType | null
    _min: WhatsappOficialMinAggregateOutputType | null
    _max: WhatsappOficialMaxAggregateOutputType | null
  }

  type GetWhatsappOficialGroupByPayload<T extends whatsappOficialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WhatsappOficialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WhatsappOficialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WhatsappOficialGroupByOutputType[P]>
            : GetScalarType<T[P], WhatsappOficialGroupByOutputType[P]>
        }
      >
    >


  export type whatsappOficialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phone_number_id?: boolean
    waba_id?: boolean
    send_token?: boolean
    business_id?: boolean
    phone_number?: boolean
    companyId?: boolean
    use_rabbitmq?: boolean
    token_mult100?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    chatwoot_webhook_url?: boolean
    auth_token_chatwoot?: boolean
    n8n_webhook_url?: boolean
    auth_token_n8n?: boolean
    crm_webhook_url?: boolean
    auth_token_crm?: boolean
    typebot_webhook_url?: boolean
    auth_token_typebot?: boolean
    rabbitmq_exchange?: boolean
    rabbitmq_queue?: boolean
    rabbitmq_routing_key?: boolean
    company?: boolean | companyDefaultArgs<ExtArgs>
    sendMessageWhatsApp?: boolean | whatsappOficial$sendMessageWhatsAppArgs<ExtArgs>
    _count?: boolean | WhatsappOficialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsappOficial"]>

  export type whatsappOficialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    phone_number_id?: boolean
    waba_id?: boolean
    send_token?: boolean
    business_id?: boolean
    phone_number?: boolean
    companyId?: boolean
    use_rabbitmq?: boolean
    token_mult100?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    chatwoot_webhook_url?: boolean
    auth_token_chatwoot?: boolean
    n8n_webhook_url?: boolean
    auth_token_n8n?: boolean
    crm_webhook_url?: boolean
    auth_token_crm?: boolean
    typebot_webhook_url?: boolean
    auth_token_typebot?: boolean
    rabbitmq_exchange?: boolean
    rabbitmq_queue?: boolean
    rabbitmq_routing_key?: boolean
    company?: boolean | companyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["whatsappOficial"]>

  export type whatsappOficialSelectScalar = {
    id?: boolean
    phone_number_id?: boolean
    waba_id?: boolean
    send_token?: boolean
    business_id?: boolean
    phone_number?: boolean
    companyId?: boolean
    use_rabbitmq?: boolean
    token_mult100?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    chatwoot_webhook_url?: boolean
    auth_token_chatwoot?: boolean
    n8n_webhook_url?: boolean
    auth_token_n8n?: boolean
    crm_webhook_url?: boolean
    auth_token_crm?: boolean
    typebot_webhook_url?: boolean
    auth_token_typebot?: boolean
    rabbitmq_exchange?: boolean
    rabbitmq_queue?: boolean
    rabbitmq_routing_key?: boolean
  }

  export type whatsappOficialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | companyDefaultArgs<ExtArgs>
    sendMessageWhatsApp?: boolean | whatsappOficial$sendMessageWhatsAppArgs<ExtArgs>
    _count?: boolean | WhatsappOficialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type whatsappOficialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | companyDefaultArgs<ExtArgs>
  }

  export type $whatsappOficialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "whatsappOficial"
    objects: {
      company: Prisma.$companyPayload<ExtArgs>
      sendMessageWhatsApp: Prisma.$sendMessageWhatsAppPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      phone_number_id: string
      waba_id: string
      send_token: string
      business_id: string
      phone_number: string
      companyId: number
      use_rabbitmq: boolean
      token_mult100: string
      create_at: Date | null
      update_at: Date | null
      deleted_at: Date | null
      chatwoot_webhook_url: string | null
      auth_token_chatwoot: string | null
      n8n_webhook_url: string | null
      auth_token_n8n: string | null
      crm_webhook_url: string | null
      auth_token_crm: string | null
      typebot_webhook_url: string | null
      auth_token_typebot: string | null
      rabbitmq_exchange: string | null
      rabbitmq_queue: string | null
      rabbitmq_routing_key: string | null
    }, ExtArgs["result"]["whatsappOficial"]>
    composites: {}
  }

  type whatsappOficialGetPayload<S extends boolean | null | undefined | whatsappOficialDefaultArgs> = $Result.GetResult<Prisma.$whatsappOficialPayload, S>

  type whatsappOficialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<whatsappOficialFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WhatsappOficialCountAggregateInputType | true
    }

  export interface whatsappOficialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['whatsappOficial'], meta: { name: 'whatsappOficial' } }
    /**
     * Find zero or one WhatsappOficial that matches the filter.
     * @param {whatsappOficialFindUniqueArgs} args - Arguments to find a WhatsappOficial
     * @example
     * // Get one WhatsappOficial
     * const whatsappOficial = await prisma.whatsappOficial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends whatsappOficialFindUniqueArgs>(args: SelectSubset<T, whatsappOficialFindUniqueArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WhatsappOficial that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {whatsappOficialFindUniqueOrThrowArgs} args - Arguments to find a WhatsappOficial
     * @example
     * // Get one WhatsappOficial
     * const whatsappOficial = await prisma.whatsappOficial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends whatsappOficialFindUniqueOrThrowArgs>(args: SelectSubset<T, whatsappOficialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WhatsappOficial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsappOficialFindFirstArgs} args - Arguments to find a WhatsappOficial
     * @example
     * // Get one WhatsappOficial
     * const whatsappOficial = await prisma.whatsappOficial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends whatsappOficialFindFirstArgs>(args?: SelectSubset<T, whatsappOficialFindFirstArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WhatsappOficial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsappOficialFindFirstOrThrowArgs} args - Arguments to find a WhatsappOficial
     * @example
     * // Get one WhatsappOficial
     * const whatsappOficial = await prisma.whatsappOficial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends whatsappOficialFindFirstOrThrowArgs>(args?: SelectSubset<T, whatsappOficialFindFirstOrThrowArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WhatsappOficials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsappOficialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WhatsappOficials
     * const whatsappOficials = await prisma.whatsappOficial.findMany()
     * 
     * // Get first 10 WhatsappOficials
     * const whatsappOficials = await prisma.whatsappOficial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const whatsappOficialWithIdOnly = await prisma.whatsappOficial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends whatsappOficialFindManyArgs>(args?: SelectSubset<T, whatsappOficialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WhatsappOficial.
     * @param {whatsappOficialCreateArgs} args - Arguments to create a WhatsappOficial.
     * @example
     * // Create one WhatsappOficial
     * const WhatsappOficial = await prisma.whatsappOficial.create({
     *   data: {
     *     // ... data to create a WhatsappOficial
     *   }
     * })
     * 
     */
    create<T extends whatsappOficialCreateArgs>(args: SelectSubset<T, whatsappOficialCreateArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WhatsappOficials.
     * @param {whatsappOficialCreateManyArgs} args - Arguments to create many WhatsappOficials.
     * @example
     * // Create many WhatsappOficials
     * const whatsappOficial = await prisma.whatsappOficial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends whatsappOficialCreateManyArgs>(args?: SelectSubset<T, whatsappOficialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many WhatsappOficials and returns the data saved in the database.
     * @param {whatsappOficialCreateManyAndReturnArgs} args - Arguments to create many WhatsappOficials.
     * @example
     * // Create many WhatsappOficials
     * const whatsappOficial = await prisma.whatsappOficial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many WhatsappOficials and only return the `id`
     * const whatsappOficialWithIdOnly = await prisma.whatsappOficial.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends whatsappOficialCreateManyAndReturnArgs>(args?: SelectSubset<T, whatsappOficialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a WhatsappOficial.
     * @param {whatsappOficialDeleteArgs} args - Arguments to delete one WhatsappOficial.
     * @example
     * // Delete one WhatsappOficial
     * const WhatsappOficial = await prisma.whatsappOficial.delete({
     *   where: {
     *     // ... filter to delete one WhatsappOficial
     *   }
     * })
     * 
     */
    delete<T extends whatsappOficialDeleteArgs>(args: SelectSubset<T, whatsappOficialDeleteArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WhatsappOficial.
     * @param {whatsappOficialUpdateArgs} args - Arguments to update one WhatsappOficial.
     * @example
     * // Update one WhatsappOficial
     * const whatsappOficial = await prisma.whatsappOficial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends whatsappOficialUpdateArgs>(args: SelectSubset<T, whatsappOficialUpdateArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WhatsappOficials.
     * @param {whatsappOficialDeleteManyArgs} args - Arguments to filter WhatsappOficials to delete.
     * @example
     * // Delete a few WhatsappOficials
     * const { count } = await prisma.whatsappOficial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends whatsappOficialDeleteManyArgs>(args?: SelectSubset<T, whatsappOficialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WhatsappOficials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsappOficialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WhatsappOficials
     * const whatsappOficial = await prisma.whatsappOficial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends whatsappOficialUpdateManyArgs>(args: SelectSubset<T, whatsappOficialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WhatsappOficial.
     * @param {whatsappOficialUpsertArgs} args - Arguments to update or create a WhatsappOficial.
     * @example
     * // Update or create a WhatsappOficial
     * const whatsappOficial = await prisma.whatsappOficial.upsert({
     *   create: {
     *     // ... data to create a WhatsappOficial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WhatsappOficial we want to update
     *   }
     * })
     */
    upsert<T extends whatsappOficialUpsertArgs>(args: SelectSubset<T, whatsappOficialUpsertArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WhatsappOficials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsappOficialCountArgs} args - Arguments to filter WhatsappOficials to count.
     * @example
     * // Count the number of WhatsappOficials
     * const count = await prisma.whatsappOficial.count({
     *   where: {
     *     // ... the filter for the WhatsappOficials we want to count
     *   }
     * })
    **/
    count<T extends whatsappOficialCountArgs>(
      args?: Subset<T, whatsappOficialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WhatsappOficialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WhatsappOficial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WhatsappOficialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WhatsappOficialAggregateArgs>(args: Subset<T, WhatsappOficialAggregateArgs>): Prisma.PrismaPromise<GetWhatsappOficialAggregateType<T>>

    /**
     * Group by WhatsappOficial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {whatsappOficialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends whatsappOficialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: whatsappOficialGroupByArgs['orderBy'] }
        : { orderBy?: whatsappOficialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, whatsappOficialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWhatsappOficialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the whatsappOficial model
   */
  readonly fields: whatsappOficialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for whatsappOficial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__whatsappOficialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends companyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, companyDefaultArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sendMessageWhatsApp<T extends whatsappOficial$sendMessageWhatsAppArgs<ExtArgs> = {}>(args?: Subset<T, whatsappOficial$sendMessageWhatsAppArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the whatsappOficial model
   */ 
  interface whatsappOficialFieldRefs {
    readonly id: FieldRef<"whatsappOficial", 'Int'>
    readonly phone_number_id: FieldRef<"whatsappOficial", 'String'>
    readonly waba_id: FieldRef<"whatsappOficial", 'String'>
    readonly send_token: FieldRef<"whatsappOficial", 'String'>
    readonly business_id: FieldRef<"whatsappOficial", 'String'>
    readonly phone_number: FieldRef<"whatsappOficial", 'String'>
    readonly companyId: FieldRef<"whatsappOficial", 'Int'>
    readonly use_rabbitmq: FieldRef<"whatsappOficial", 'Boolean'>
    readonly token_mult100: FieldRef<"whatsappOficial", 'String'>
    readonly create_at: FieldRef<"whatsappOficial", 'DateTime'>
    readonly update_at: FieldRef<"whatsappOficial", 'DateTime'>
    readonly deleted_at: FieldRef<"whatsappOficial", 'DateTime'>
    readonly chatwoot_webhook_url: FieldRef<"whatsappOficial", 'String'>
    readonly auth_token_chatwoot: FieldRef<"whatsappOficial", 'String'>
    readonly n8n_webhook_url: FieldRef<"whatsappOficial", 'String'>
    readonly auth_token_n8n: FieldRef<"whatsappOficial", 'String'>
    readonly crm_webhook_url: FieldRef<"whatsappOficial", 'String'>
    readonly auth_token_crm: FieldRef<"whatsappOficial", 'String'>
    readonly typebot_webhook_url: FieldRef<"whatsappOficial", 'String'>
    readonly auth_token_typebot: FieldRef<"whatsappOficial", 'String'>
    readonly rabbitmq_exchange: FieldRef<"whatsappOficial", 'String'>
    readonly rabbitmq_queue: FieldRef<"whatsappOficial", 'String'>
    readonly rabbitmq_routing_key: FieldRef<"whatsappOficial", 'String'>
  }
    

  // Custom InputTypes
  /**
   * whatsappOficial findUnique
   */
  export type whatsappOficialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * Filter, which whatsappOficial to fetch.
     */
    where: whatsappOficialWhereUniqueInput
  }

  /**
   * whatsappOficial findUniqueOrThrow
   */
  export type whatsappOficialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * Filter, which whatsappOficial to fetch.
     */
    where: whatsappOficialWhereUniqueInput
  }

  /**
   * whatsappOficial findFirst
   */
  export type whatsappOficialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * Filter, which whatsappOficial to fetch.
     */
    where?: whatsappOficialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsappOficials to fetch.
     */
    orderBy?: whatsappOficialOrderByWithRelationInput | whatsappOficialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsappOficials.
     */
    cursor?: whatsappOficialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsappOficials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsappOficials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsappOficials.
     */
    distinct?: WhatsappOficialScalarFieldEnum | WhatsappOficialScalarFieldEnum[]
  }

  /**
   * whatsappOficial findFirstOrThrow
   */
  export type whatsappOficialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * Filter, which whatsappOficial to fetch.
     */
    where?: whatsappOficialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsappOficials to fetch.
     */
    orderBy?: whatsappOficialOrderByWithRelationInput | whatsappOficialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for whatsappOficials.
     */
    cursor?: whatsappOficialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsappOficials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsappOficials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of whatsappOficials.
     */
    distinct?: WhatsappOficialScalarFieldEnum | WhatsappOficialScalarFieldEnum[]
  }

  /**
   * whatsappOficial findMany
   */
  export type whatsappOficialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * Filter, which whatsappOficials to fetch.
     */
    where?: whatsappOficialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of whatsappOficials to fetch.
     */
    orderBy?: whatsappOficialOrderByWithRelationInput | whatsappOficialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing whatsappOficials.
     */
    cursor?: whatsappOficialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` whatsappOficials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` whatsappOficials.
     */
    skip?: number
    distinct?: WhatsappOficialScalarFieldEnum | WhatsappOficialScalarFieldEnum[]
  }

  /**
   * whatsappOficial create
   */
  export type whatsappOficialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * The data needed to create a whatsappOficial.
     */
    data: XOR<whatsappOficialCreateInput, whatsappOficialUncheckedCreateInput>
  }

  /**
   * whatsappOficial createMany
   */
  export type whatsappOficialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many whatsappOficials.
     */
    data: whatsappOficialCreateManyInput | whatsappOficialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * whatsappOficial createManyAndReturn
   */
  export type whatsappOficialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many whatsappOficials.
     */
    data: whatsappOficialCreateManyInput | whatsappOficialCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * whatsappOficial update
   */
  export type whatsappOficialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * The data needed to update a whatsappOficial.
     */
    data: XOR<whatsappOficialUpdateInput, whatsappOficialUncheckedUpdateInput>
    /**
     * Choose, which whatsappOficial to update.
     */
    where: whatsappOficialWhereUniqueInput
  }

  /**
   * whatsappOficial updateMany
   */
  export type whatsappOficialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update whatsappOficials.
     */
    data: XOR<whatsappOficialUpdateManyMutationInput, whatsappOficialUncheckedUpdateManyInput>
    /**
     * Filter which whatsappOficials to update
     */
    where?: whatsappOficialWhereInput
  }

  /**
   * whatsappOficial upsert
   */
  export type whatsappOficialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * The filter to search for the whatsappOficial to update in case it exists.
     */
    where: whatsappOficialWhereUniqueInput
    /**
     * In case the whatsappOficial found by the `where` argument doesn't exist, create a new whatsappOficial with this data.
     */
    create: XOR<whatsappOficialCreateInput, whatsappOficialUncheckedCreateInput>
    /**
     * In case the whatsappOficial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<whatsappOficialUpdateInput, whatsappOficialUncheckedUpdateInput>
  }

  /**
   * whatsappOficial delete
   */
  export type whatsappOficialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
    /**
     * Filter which whatsappOficial to delete.
     */
    where: whatsappOficialWhereUniqueInput
  }

  /**
   * whatsappOficial deleteMany
   */
  export type whatsappOficialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which whatsappOficials to delete
     */
    where?: whatsappOficialWhereInput
  }

  /**
   * whatsappOficial.sendMessageWhatsApp
   */
  export type whatsappOficial$sendMessageWhatsAppArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    where?: sendMessageWhatsAppWhereInput
    orderBy?: sendMessageWhatsAppOrderByWithRelationInput | sendMessageWhatsAppOrderByWithRelationInput[]
    cursor?: sendMessageWhatsAppWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SendMessageWhatsAppScalarFieldEnum | SendMessageWhatsAppScalarFieldEnum[]
  }

  /**
   * whatsappOficial without action
   */
  export type whatsappOficialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the whatsappOficial
     */
    select?: whatsappOficialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: whatsappOficialInclude<ExtArgs> | null
  }


  /**
   * Model sendMessageWhatsApp
   */

  export type AggregateSendMessageWhatsApp = {
    _count: SendMessageWhatsAppCountAggregateOutputType | null
    _avg: SendMessageWhatsAppAvgAggregateOutputType | null
    _sum: SendMessageWhatsAppSumAggregateOutputType | null
    _min: SendMessageWhatsAppMinAggregateOutputType | null
    _max: SendMessageWhatsAppMaxAggregateOutputType | null
  }

  export type SendMessageWhatsAppAvgAggregateOutputType = {
    id: number | null
    whatsappOficialId: number | null
  }

  export type SendMessageWhatsAppSumAggregateOutputType = {
    id: number | null
    whatsappOficialId: number | null
  }

  export type SendMessageWhatsAppMinAggregateOutputType = {
    id: number | null
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    type: $Enums.typeMessage | null
    to: string | null
    enviada: boolean | null
    pathFile: string | null
    idFileMeta: string | null
    whatsappOficialId: number | null
  }

  export type SendMessageWhatsAppMaxAggregateOutputType = {
    id: number | null
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    type: $Enums.typeMessage | null
    to: string | null
    enviada: boolean | null
    pathFile: string | null
    idFileMeta: string | null
    whatsappOficialId: number | null
  }

  export type SendMessageWhatsAppCountAggregateOutputType = {
    id: number
    create_at: number
    update_at: number
    deleted_at: number
    type: number
    to: number
    text: number
    reaction: number
    audio: number
    document: number
    image: number
    sticker: number
    video: number
    location: number
    contacts: number
    interactive: number
    template: number
    enviada: number
    pathFile: number
    idFileMeta: number
    whatsappOficialId: number
    idMessageWhatsApp: number
    _all: number
  }


  export type SendMessageWhatsAppAvgAggregateInputType = {
    id?: true
    whatsappOficialId?: true
  }

  export type SendMessageWhatsAppSumAggregateInputType = {
    id?: true
    whatsappOficialId?: true
  }

  export type SendMessageWhatsAppMinAggregateInputType = {
    id?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    type?: true
    to?: true
    enviada?: true
    pathFile?: true
    idFileMeta?: true
    whatsappOficialId?: true
  }

  export type SendMessageWhatsAppMaxAggregateInputType = {
    id?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    type?: true
    to?: true
    enviada?: true
    pathFile?: true
    idFileMeta?: true
    whatsappOficialId?: true
  }

  export type SendMessageWhatsAppCountAggregateInputType = {
    id?: true
    create_at?: true
    update_at?: true
    deleted_at?: true
    type?: true
    to?: true
    text?: true
    reaction?: true
    audio?: true
    document?: true
    image?: true
    sticker?: true
    video?: true
    location?: true
    contacts?: true
    interactive?: true
    template?: true
    enviada?: true
    pathFile?: true
    idFileMeta?: true
    whatsappOficialId?: true
    idMessageWhatsApp?: true
    _all?: true
  }

  export type SendMessageWhatsAppAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sendMessageWhatsApp to aggregate.
     */
    where?: sendMessageWhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sendMessageWhatsApps to fetch.
     */
    orderBy?: sendMessageWhatsAppOrderByWithRelationInput | sendMessageWhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sendMessageWhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sendMessageWhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sendMessageWhatsApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sendMessageWhatsApps
    **/
    _count?: true | SendMessageWhatsAppCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SendMessageWhatsAppAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SendMessageWhatsAppSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SendMessageWhatsAppMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SendMessageWhatsAppMaxAggregateInputType
  }

  export type GetSendMessageWhatsAppAggregateType<T extends SendMessageWhatsAppAggregateArgs> = {
        [P in keyof T & keyof AggregateSendMessageWhatsApp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSendMessageWhatsApp[P]>
      : GetScalarType<T[P], AggregateSendMessageWhatsApp[P]>
  }




  export type sendMessageWhatsAppGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sendMessageWhatsAppWhereInput
    orderBy?: sendMessageWhatsAppOrderByWithAggregationInput | sendMessageWhatsAppOrderByWithAggregationInput[]
    by: SendMessageWhatsAppScalarFieldEnum[] | SendMessageWhatsAppScalarFieldEnum
    having?: sendMessageWhatsAppScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SendMessageWhatsAppCountAggregateInputType | true
    _avg?: SendMessageWhatsAppAvgAggregateInputType
    _sum?: SendMessageWhatsAppSumAggregateInputType
    _min?: SendMessageWhatsAppMinAggregateInputType
    _max?: SendMessageWhatsAppMaxAggregateInputType
  }

  export type SendMessageWhatsAppGroupByOutputType = {
    id: number
    create_at: Date | null
    update_at: Date | null
    deleted_at: Date | null
    type: $Enums.typeMessage
    to: string
    text: JsonValue | null
    reaction: JsonValue | null
    audio: JsonValue | null
    document: JsonValue | null
    image: JsonValue | null
    sticker: JsonValue | null
    video: JsonValue | null
    location: JsonValue | null
    contacts: JsonValue | null
    interactive: JsonValue | null
    template: JsonValue | null
    enviada: boolean
    pathFile: string | null
    idFileMeta: string | null
    whatsappOficialId: number
    idMessageWhatsApp: JsonValue | null
    _count: SendMessageWhatsAppCountAggregateOutputType | null
    _avg: SendMessageWhatsAppAvgAggregateOutputType | null
    _sum: SendMessageWhatsAppSumAggregateOutputType | null
    _min: SendMessageWhatsAppMinAggregateOutputType | null
    _max: SendMessageWhatsAppMaxAggregateOutputType | null
  }

  type GetSendMessageWhatsAppGroupByPayload<T extends sendMessageWhatsAppGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SendMessageWhatsAppGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SendMessageWhatsAppGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SendMessageWhatsAppGroupByOutputType[P]>
            : GetScalarType<T[P], SendMessageWhatsAppGroupByOutputType[P]>
        }
      >
    >


  export type sendMessageWhatsAppSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    type?: boolean
    to?: boolean
    text?: boolean
    reaction?: boolean
    audio?: boolean
    document?: boolean
    image?: boolean
    sticker?: boolean
    video?: boolean
    location?: boolean
    contacts?: boolean
    interactive?: boolean
    template?: boolean
    enviada?: boolean
    pathFile?: boolean
    idFileMeta?: boolean
    whatsappOficialId?: boolean
    idMessageWhatsApp?: boolean
    whats?: boolean | whatsappOficialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sendMessageWhatsApp"]>

  export type sendMessageWhatsAppSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    type?: boolean
    to?: boolean
    text?: boolean
    reaction?: boolean
    audio?: boolean
    document?: boolean
    image?: boolean
    sticker?: boolean
    video?: boolean
    location?: boolean
    contacts?: boolean
    interactive?: boolean
    template?: boolean
    enviada?: boolean
    pathFile?: boolean
    idFileMeta?: boolean
    whatsappOficialId?: boolean
    idMessageWhatsApp?: boolean
    whats?: boolean | whatsappOficialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sendMessageWhatsApp"]>

  export type sendMessageWhatsAppSelectScalar = {
    id?: boolean
    create_at?: boolean
    update_at?: boolean
    deleted_at?: boolean
    type?: boolean
    to?: boolean
    text?: boolean
    reaction?: boolean
    audio?: boolean
    document?: boolean
    image?: boolean
    sticker?: boolean
    video?: boolean
    location?: boolean
    contacts?: boolean
    interactive?: boolean
    template?: boolean
    enviada?: boolean
    pathFile?: boolean
    idFileMeta?: boolean
    whatsappOficialId?: boolean
    idMessageWhatsApp?: boolean
  }

  export type sendMessageWhatsAppInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    whats?: boolean | whatsappOficialDefaultArgs<ExtArgs>
  }
  export type sendMessageWhatsAppIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    whats?: boolean | whatsappOficialDefaultArgs<ExtArgs>
  }

  export type $sendMessageWhatsAppPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sendMessageWhatsApp"
    objects: {
      whats: Prisma.$whatsappOficialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      create_at: Date | null
      update_at: Date | null
      deleted_at: Date | null
      type: $Enums.typeMessage
      to: string
      text: Prisma.JsonValue | null
      reaction: Prisma.JsonValue | null
      audio: Prisma.JsonValue | null
      document: Prisma.JsonValue | null
      image: Prisma.JsonValue | null
      sticker: Prisma.JsonValue | null
      video: Prisma.JsonValue | null
      location: Prisma.JsonValue | null
      contacts: Prisma.JsonValue | null
      interactive: Prisma.JsonValue | null
      template: Prisma.JsonValue | null
      enviada: boolean
      pathFile: string | null
      idFileMeta: string | null
      whatsappOficialId: number
      idMessageWhatsApp: Prisma.JsonValue | null
    }, ExtArgs["result"]["sendMessageWhatsApp"]>
    composites: {}
  }

  type sendMessageWhatsAppGetPayload<S extends boolean | null | undefined | sendMessageWhatsAppDefaultArgs> = $Result.GetResult<Prisma.$sendMessageWhatsAppPayload, S>

  type sendMessageWhatsAppCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sendMessageWhatsAppFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SendMessageWhatsAppCountAggregateInputType | true
    }

  export interface sendMessageWhatsAppDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sendMessageWhatsApp'], meta: { name: 'sendMessageWhatsApp' } }
    /**
     * Find zero or one SendMessageWhatsApp that matches the filter.
     * @param {sendMessageWhatsAppFindUniqueArgs} args - Arguments to find a SendMessageWhatsApp
     * @example
     * // Get one SendMessageWhatsApp
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sendMessageWhatsAppFindUniqueArgs>(args: SelectSubset<T, sendMessageWhatsAppFindUniqueArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SendMessageWhatsApp that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sendMessageWhatsAppFindUniqueOrThrowArgs} args - Arguments to find a SendMessageWhatsApp
     * @example
     * // Get one SendMessageWhatsApp
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sendMessageWhatsAppFindUniqueOrThrowArgs>(args: SelectSubset<T, sendMessageWhatsAppFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SendMessageWhatsApp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sendMessageWhatsAppFindFirstArgs} args - Arguments to find a SendMessageWhatsApp
     * @example
     * // Get one SendMessageWhatsApp
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sendMessageWhatsAppFindFirstArgs>(args?: SelectSubset<T, sendMessageWhatsAppFindFirstArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SendMessageWhatsApp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sendMessageWhatsAppFindFirstOrThrowArgs} args - Arguments to find a SendMessageWhatsApp
     * @example
     * // Get one SendMessageWhatsApp
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sendMessageWhatsAppFindFirstOrThrowArgs>(args?: SelectSubset<T, sendMessageWhatsAppFindFirstOrThrowArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SendMessageWhatsApps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sendMessageWhatsAppFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SendMessageWhatsApps
     * const sendMessageWhatsApps = await prisma.sendMessageWhatsApp.findMany()
     * 
     * // Get first 10 SendMessageWhatsApps
     * const sendMessageWhatsApps = await prisma.sendMessageWhatsApp.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sendMessageWhatsAppWithIdOnly = await prisma.sendMessageWhatsApp.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sendMessageWhatsAppFindManyArgs>(args?: SelectSubset<T, sendMessageWhatsAppFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SendMessageWhatsApp.
     * @param {sendMessageWhatsAppCreateArgs} args - Arguments to create a SendMessageWhatsApp.
     * @example
     * // Create one SendMessageWhatsApp
     * const SendMessageWhatsApp = await prisma.sendMessageWhatsApp.create({
     *   data: {
     *     // ... data to create a SendMessageWhatsApp
     *   }
     * })
     * 
     */
    create<T extends sendMessageWhatsAppCreateArgs>(args: SelectSubset<T, sendMessageWhatsAppCreateArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SendMessageWhatsApps.
     * @param {sendMessageWhatsAppCreateManyArgs} args - Arguments to create many SendMessageWhatsApps.
     * @example
     * // Create many SendMessageWhatsApps
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sendMessageWhatsAppCreateManyArgs>(args?: SelectSubset<T, sendMessageWhatsAppCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SendMessageWhatsApps and returns the data saved in the database.
     * @param {sendMessageWhatsAppCreateManyAndReturnArgs} args - Arguments to create many SendMessageWhatsApps.
     * @example
     * // Create many SendMessageWhatsApps
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SendMessageWhatsApps and only return the `id`
     * const sendMessageWhatsAppWithIdOnly = await prisma.sendMessageWhatsApp.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sendMessageWhatsAppCreateManyAndReturnArgs>(args?: SelectSubset<T, sendMessageWhatsAppCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SendMessageWhatsApp.
     * @param {sendMessageWhatsAppDeleteArgs} args - Arguments to delete one SendMessageWhatsApp.
     * @example
     * // Delete one SendMessageWhatsApp
     * const SendMessageWhatsApp = await prisma.sendMessageWhatsApp.delete({
     *   where: {
     *     // ... filter to delete one SendMessageWhatsApp
     *   }
     * })
     * 
     */
    delete<T extends sendMessageWhatsAppDeleteArgs>(args: SelectSubset<T, sendMessageWhatsAppDeleteArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SendMessageWhatsApp.
     * @param {sendMessageWhatsAppUpdateArgs} args - Arguments to update one SendMessageWhatsApp.
     * @example
     * // Update one SendMessageWhatsApp
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sendMessageWhatsAppUpdateArgs>(args: SelectSubset<T, sendMessageWhatsAppUpdateArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SendMessageWhatsApps.
     * @param {sendMessageWhatsAppDeleteManyArgs} args - Arguments to filter SendMessageWhatsApps to delete.
     * @example
     * // Delete a few SendMessageWhatsApps
     * const { count } = await prisma.sendMessageWhatsApp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sendMessageWhatsAppDeleteManyArgs>(args?: SelectSubset<T, sendMessageWhatsAppDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SendMessageWhatsApps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sendMessageWhatsAppUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SendMessageWhatsApps
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sendMessageWhatsAppUpdateManyArgs>(args: SelectSubset<T, sendMessageWhatsAppUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SendMessageWhatsApp.
     * @param {sendMessageWhatsAppUpsertArgs} args - Arguments to update or create a SendMessageWhatsApp.
     * @example
     * // Update or create a SendMessageWhatsApp
     * const sendMessageWhatsApp = await prisma.sendMessageWhatsApp.upsert({
     *   create: {
     *     // ... data to create a SendMessageWhatsApp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SendMessageWhatsApp we want to update
     *   }
     * })
     */
    upsert<T extends sendMessageWhatsAppUpsertArgs>(args: SelectSubset<T, sendMessageWhatsAppUpsertArgs<ExtArgs>>): Prisma__sendMessageWhatsAppClient<$Result.GetResult<Prisma.$sendMessageWhatsAppPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SendMessageWhatsApps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sendMessageWhatsAppCountArgs} args - Arguments to filter SendMessageWhatsApps to count.
     * @example
     * // Count the number of SendMessageWhatsApps
     * const count = await prisma.sendMessageWhatsApp.count({
     *   where: {
     *     // ... the filter for the SendMessageWhatsApps we want to count
     *   }
     * })
    **/
    count<T extends sendMessageWhatsAppCountArgs>(
      args?: Subset<T, sendMessageWhatsAppCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SendMessageWhatsAppCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SendMessageWhatsApp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SendMessageWhatsAppAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SendMessageWhatsAppAggregateArgs>(args: Subset<T, SendMessageWhatsAppAggregateArgs>): Prisma.PrismaPromise<GetSendMessageWhatsAppAggregateType<T>>

    /**
     * Group by SendMessageWhatsApp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sendMessageWhatsAppGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sendMessageWhatsAppGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sendMessageWhatsAppGroupByArgs['orderBy'] }
        : { orderBy?: sendMessageWhatsAppGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sendMessageWhatsAppGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSendMessageWhatsAppGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sendMessageWhatsApp model
   */
  readonly fields: sendMessageWhatsAppFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sendMessageWhatsApp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sendMessageWhatsAppClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    whats<T extends whatsappOficialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, whatsappOficialDefaultArgs<ExtArgs>>): Prisma__whatsappOficialClient<$Result.GetResult<Prisma.$whatsappOficialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sendMessageWhatsApp model
   */ 
  interface sendMessageWhatsAppFieldRefs {
    readonly id: FieldRef<"sendMessageWhatsApp", 'Int'>
    readonly create_at: FieldRef<"sendMessageWhatsApp", 'DateTime'>
    readonly update_at: FieldRef<"sendMessageWhatsApp", 'DateTime'>
    readonly deleted_at: FieldRef<"sendMessageWhatsApp", 'DateTime'>
    readonly type: FieldRef<"sendMessageWhatsApp", 'typeMessage'>
    readonly to: FieldRef<"sendMessageWhatsApp", 'String'>
    readonly text: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly reaction: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly audio: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly document: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly image: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly sticker: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly video: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly location: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly contacts: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly interactive: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly template: FieldRef<"sendMessageWhatsApp", 'Json'>
    readonly enviada: FieldRef<"sendMessageWhatsApp", 'Boolean'>
    readonly pathFile: FieldRef<"sendMessageWhatsApp", 'String'>
    readonly idFileMeta: FieldRef<"sendMessageWhatsApp", 'String'>
    readonly whatsappOficialId: FieldRef<"sendMessageWhatsApp", 'Int'>
    readonly idMessageWhatsApp: FieldRef<"sendMessageWhatsApp", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * sendMessageWhatsApp findUnique
   */
  export type sendMessageWhatsAppFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * Filter, which sendMessageWhatsApp to fetch.
     */
    where: sendMessageWhatsAppWhereUniqueInput
  }

  /**
   * sendMessageWhatsApp findUniqueOrThrow
   */
  export type sendMessageWhatsAppFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * Filter, which sendMessageWhatsApp to fetch.
     */
    where: sendMessageWhatsAppWhereUniqueInput
  }

  /**
   * sendMessageWhatsApp findFirst
   */
  export type sendMessageWhatsAppFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * Filter, which sendMessageWhatsApp to fetch.
     */
    where?: sendMessageWhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sendMessageWhatsApps to fetch.
     */
    orderBy?: sendMessageWhatsAppOrderByWithRelationInput | sendMessageWhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sendMessageWhatsApps.
     */
    cursor?: sendMessageWhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sendMessageWhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sendMessageWhatsApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sendMessageWhatsApps.
     */
    distinct?: SendMessageWhatsAppScalarFieldEnum | SendMessageWhatsAppScalarFieldEnum[]
  }

  /**
   * sendMessageWhatsApp findFirstOrThrow
   */
  export type sendMessageWhatsAppFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * Filter, which sendMessageWhatsApp to fetch.
     */
    where?: sendMessageWhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sendMessageWhatsApps to fetch.
     */
    orderBy?: sendMessageWhatsAppOrderByWithRelationInput | sendMessageWhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sendMessageWhatsApps.
     */
    cursor?: sendMessageWhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sendMessageWhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sendMessageWhatsApps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sendMessageWhatsApps.
     */
    distinct?: SendMessageWhatsAppScalarFieldEnum | SendMessageWhatsAppScalarFieldEnum[]
  }

  /**
   * sendMessageWhatsApp findMany
   */
  export type sendMessageWhatsAppFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * Filter, which sendMessageWhatsApps to fetch.
     */
    where?: sendMessageWhatsAppWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sendMessageWhatsApps to fetch.
     */
    orderBy?: sendMessageWhatsAppOrderByWithRelationInput | sendMessageWhatsAppOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sendMessageWhatsApps.
     */
    cursor?: sendMessageWhatsAppWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sendMessageWhatsApps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sendMessageWhatsApps.
     */
    skip?: number
    distinct?: SendMessageWhatsAppScalarFieldEnum | SendMessageWhatsAppScalarFieldEnum[]
  }

  /**
   * sendMessageWhatsApp create
   */
  export type sendMessageWhatsAppCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * The data needed to create a sendMessageWhatsApp.
     */
    data: XOR<sendMessageWhatsAppCreateInput, sendMessageWhatsAppUncheckedCreateInput>
  }

  /**
   * sendMessageWhatsApp createMany
   */
  export type sendMessageWhatsAppCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sendMessageWhatsApps.
     */
    data: sendMessageWhatsAppCreateManyInput | sendMessageWhatsAppCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sendMessageWhatsApp createManyAndReturn
   */
  export type sendMessageWhatsAppCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many sendMessageWhatsApps.
     */
    data: sendMessageWhatsAppCreateManyInput | sendMessageWhatsAppCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sendMessageWhatsApp update
   */
  export type sendMessageWhatsAppUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * The data needed to update a sendMessageWhatsApp.
     */
    data: XOR<sendMessageWhatsAppUpdateInput, sendMessageWhatsAppUncheckedUpdateInput>
    /**
     * Choose, which sendMessageWhatsApp to update.
     */
    where: sendMessageWhatsAppWhereUniqueInput
  }

  /**
   * sendMessageWhatsApp updateMany
   */
  export type sendMessageWhatsAppUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sendMessageWhatsApps.
     */
    data: XOR<sendMessageWhatsAppUpdateManyMutationInput, sendMessageWhatsAppUncheckedUpdateManyInput>
    /**
     * Filter which sendMessageWhatsApps to update
     */
    where?: sendMessageWhatsAppWhereInput
  }

  /**
   * sendMessageWhatsApp upsert
   */
  export type sendMessageWhatsAppUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * The filter to search for the sendMessageWhatsApp to update in case it exists.
     */
    where: sendMessageWhatsAppWhereUniqueInput
    /**
     * In case the sendMessageWhatsApp found by the `where` argument doesn't exist, create a new sendMessageWhatsApp with this data.
     */
    create: XOR<sendMessageWhatsAppCreateInput, sendMessageWhatsAppUncheckedCreateInput>
    /**
     * In case the sendMessageWhatsApp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sendMessageWhatsAppUpdateInput, sendMessageWhatsAppUncheckedUpdateInput>
  }

  /**
   * sendMessageWhatsApp delete
   */
  export type sendMessageWhatsAppDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
    /**
     * Filter which sendMessageWhatsApp to delete.
     */
    where: sendMessageWhatsAppWhereUniqueInput
  }

  /**
   * sendMessageWhatsApp deleteMany
   */
  export type sendMessageWhatsAppDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sendMessageWhatsApps to delete
     */
    where?: sendMessageWhatsAppWhereInput
  }

  /**
   * sendMessageWhatsApp without action
   */
  export type sendMessageWhatsAppDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sendMessageWhatsApp
     */
    select?: sendMessageWhatsAppSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sendMessageWhatsAppInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    create_at: 'create_at',
    update_at: 'update_at',
    deleted_at: 'deleted_at',
    name: 'name',
    idEmpresaMult100: 'idEmpresaMult100',
    token: 'token'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const WhatsappOficialScalarFieldEnum: {
    id: 'id',
    phone_number_id: 'phone_number_id',
    waba_id: 'waba_id',
    send_token: 'send_token',
    business_id: 'business_id',
    phone_number: 'phone_number',
    companyId: 'companyId',
    use_rabbitmq: 'use_rabbitmq',
    token_mult100: 'token_mult100',
    create_at: 'create_at',
    update_at: 'update_at',
    deleted_at: 'deleted_at',
    chatwoot_webhook_url: 'chatwoot_webhook_url',
    auth_token_chatwoot: 'auth_token_chatwoot',
    n8n_webhook_url: 'n8n_webhook_url',
    auth_token_n8n: 'auth_token_n8n',
    crm_webhook_url: 'crm_webhook_url',
    auth_token_crm: 'auth_token_crm',
    typebot_webhook_url: 'typebot_webhook_url',
    auth_token_typebot: 'auth_token_typebot',
    rabbitmq_exchange: 'rabbitmq_exchange',
    rabbitmq_queue: 'rabbitmq_queue',
    rabbitmq_routing_key: 'rabbitmq_routing_key'
  };

  export type WhatsappOficialScalarFieldEnum = (typeof WhatsappOficialScalarFieldEnum)[keyof typeof WhatsappOficialScalarFieldEnum]


  export const SendMessageWhatsAppScalarFieldEnum: {
    id: 'id',
    create_at: 'create_at',
    update_at: 'update_at',
    deleted_at: 'deleted_at',
    type: 'type',
    to: 'to',
    text: 'text',
    reaction: 'reaction',
    audio: 'audio',
    document: 'document',
    image: 'image',
    sticker: 'sticker',
    video: 'video',
    location: 'location',
    contacts: 'contacts',
    interactive: 'interactive',
    template: 'template',
    enviada: 'enviada',
    pathFile: 'pathFile',
    idFileMeta: 'idFileMeta',
    whatsappOficialId: 'whatsappOficialId',
    idMessageWhatsApp: 'idMessageWhatsApp'
  };

  export type SendMessageWhatsAppScalarFieldEnum = (typeof SendMessageWhatsAppScalarFieldEnum)[keyof typeof SendMessageWhatsAppScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'typeMessage'
   */
  export type EnumtypeMessageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'typeMessage'>
    


  /**
   * Reference to a field of type 'typeMessage[]'
   */
  export type ListEnumtypeMessageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'typeMessage[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type companyWhereInput = {
    AND?: companyWhereInput | companyWhereInput[]
    OR?: companyWhereInput[]
    NOT?: companyWhereInput | companyWhereInput[]
    id?: IntFilter<"company"> | number
    create_at?: DateTimeNullableFilter<"company"> | Date | string | null
    update_at?: DateTimeNullableFilter<"company"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"company"> | Date | string | null
    name?: StringFilter<"company"> | string
    idEmpresaMult100?: IntFilter<"company"> | number
    token?: StringFilter<"company"> | string
    whatsappOficial?: WhatsappOficialListRelationFilter
  }

  export type companyOrderByWithRelationInput = {
    id?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    name?: SortOrder
    idEmpresaMult100?: SortOrder
    token?: SortOrder
    whatsappOficial?: whatsappOficialOrderByRelationAggregateInput
  }

  export type companyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    idEmpresaMult100?: number
    AND?: companyWhereInput | companyWhereInput[]
    OR?: companyWhereInput[]
    NOT?: companyWhereInput | companyWhereInput[]
    create_at?: DateTimeNullableFilter<"company"> | Date | string | null
    update_at?: DateTimeNullableFilter<"company"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"company"> | Date | string | null
    name?: StringFilter<"company"> | string
    token?: StringFilter<"company"> | string
    whatsappOficial?: WhatsappOficialListRelationFilter
  }, "id" | "idEmpresaMult100">

  export type companyOrderByWithAggregationInput = {
    id?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    name?: SortOrder
    idEmpresaMult100?: SortOrder
    token?: SortOrder
    _count?: companyCountOrderByAggregateInput
    _avg?: companyAvgOrderByAggregateInput
    _max?: companyMaxOrderByAggregateInput
    _min?: companyMinOrderByAggregateInput
    _sum?: companySumOrderByAggregateInput
  }

  export type companyScalarWhereWithAggregatesInput = {
    AND?: companyScalarWhereWithAggregatesInput | companyScalarWhereWithAggregatesInput[]
    OR?: companyScalarWhereWithAggregatesInput[]
    NOT?: companyScalarWhereWithAggregatesInput | companyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"company"> | number
    create_at?: DateTimeNullableWithAggregatesFilter<"company"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"company"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"company"> | Date | string | null
    name?: StringWithAggregatesFilter<"company"> | string
    idEmpresaMult100?: IntWithAggregatesFilter<"company"> | number
    token?: StringWithAggregatesFilter<"company"> | string
  }

  export type whatsappOficialWhereInput = {
    AND?: whatsappOficialWhereInput | whatsappOficialWhereInput[]
    OR?: whatsappOficialWhereInput[]
    NOT?: whatsappOficialWhereInput | whatsappOficialWhereInput[]
    id?: IntFilter<"whatsappOficial"> | number
    phone_number_id?: StringFilter<"whatsappOficial"> | string
    waba_id?: StringFilter<"whatsappOficial"> | string
    send_token?: StringFilter<"whatsappOficial"> | string
    business_id?: StringFilter<"whatsappOficial"> | string
    phone_number?: StringFilter<"whatsappOficial"> | string
    companyId?: IntFilter<"whatsappOficial"> | number
    use_rabbitmq?: BoolFilter<"whatsappOficial"> | boolean
    token_mult100?: StringFilter<"whatsappOficial"> | string
    create_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    update_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    chatwoot_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_chatwoot?: StringNullableFilter<"whatsappOficial"> | string | null
    n8n_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_n8n?: StringNullableFilter<"whatsappOficial"> | string | null
    crm_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_crm?: StringNullableFilter<"whatsappOficial"> | string | null
    typebot_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_typebot?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_exchange?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_queue?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_routing_key?: StringNullableFilter<"whatsappOficial"> | string | null
    company?: XOR<CompanyRelationFilter, companyWhereInput>
    sendMessageWhatsApp?: SendMessageWhatsAppListRelationFilter
  }

  export type whatsappOficialOrderByWithRelationInput = {
    id?: SortOrder
    phone_number_id?: SortOrder
    waba_id?: SortOrder
    send_token?: SortOrder
    business_id?: SortOrder
    phone_number?: SortOrder
    companyId?: SortOrder
    use_rabbitmq?: SortOrder
    token_mult100?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    chatwoot_webhook_url?: SortOrderInput | SortOrder
    auth_token_chatwoot?: SortOrderInput | SortOrder
    n8n_webhook_url?: SortOrderInput | SortOrder
    auth_token_n8n?: SortOrderInput | SortOrder
    crm_webhook_url?: SortOrderInput | SortOrder
    auth_token_crm?: SortOrderInput | SortOrder
    typebot_webhook_url?: SortOrderInput | SortOrder
    auth_token_typebot?: SortOrderInput | SortOrder
    rabbitmq_exchange?: SortOrderInput | SortOrder
    rabbitmq_queue?: SortOrderInput | SortOrder
    rabbitmq_routing_key?: SortOrderInput | SortOrder
    company?: companyOrderByWithRelationInput
    sendMessageWhatsApp?: sendMessageWhatsAppOrderByRelationAggregateInput
  }

  export type whatsappOficialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token_mult100?: string
    AND?: whatsappOficialWhereInput | whatsappOficialWhereInput[]
    OR?: whatsappOficialWhereInput[]
    NOT?: whatsappOficialWhereInput | whatsappOficialWhereInput[]
    phone_number_id?: StringFilter<"whatsappOficial"> | string
    waba_id?: StringFilter<"whatsappOficial"> | string
    send_token?: StringFilter<"whatsappOficial"> | string
    business_id?: StringFilter<"whatsappOficial"> | string
    phone_number?: StringFilter<"whatsappOficial"> | string
    companyId?: IntFilter<"whatsappOficial"> | number
    use_rabbitmq?: BoolFilter<"whatsappOficial"> | boolean
    create_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    update_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    chatwoot_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_chatwoot?: StringNullableFilter<"whatsappOficial"> | string | null
    n8n_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_n8n?: StringNullableFilter<"whatsappOficial"> | string | null
    crm_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_crm?: StringNullableFilter<"whatsappOficial"> | string | null
    typebot_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_typebot?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_exchange?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_queue?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_routing_key?: StringNullableFilter<"whatsappOficial"> | string | null
    company?: XOR<CompanyRelationFilter, companyWhereInput>
    sendMessageWhatsApp?: SendMessageWhatsAppListRelationFilter
  }, "id" | "token_mult100">

  export type whatsappOficialOrderByWithAggregationInput = {
    id?: SortOrder
    phone_number_id?: SortOrder
    waba_id?: SortOrder
    send_token?: SortOrder
    business_id?: SortOrder
    phone_number?: SortOrder
    companyId?: SortOrder
    use_rabbitmq?: SortOrder
    token_mult100?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    chatwoot_webhook_url?: SortOrderInput | SortOrder
    auth_token_chatwoot?: SortOrderInput | SortOrder
    n8n_webhook_url?: SortOrderInput | SortOrder
    auth_token_n8n?: SortOrderInput | SortOrder
    crm_webhook_url?: SortOrderInput | SortOrder
    auth_token_crm?: SortOrderInput | SortOrder
    typebot_webhook_url?: SortOrderInput | SortOrder
    auth_token_typebot?: SortOrderInput | SortOrder
    rabbitmq_exchange?: SortOrderInput | SortOrder
    rabbitmq_queue?: SortOrderInput | SortOrder
    rabbitmq_routing_key?: SortOrderInput | SortOrder
    _count?: whatsappOficialCountOrderByAggregateInput
    _avg?: whatsappOficialAvgOrderByAggregateInput
    _max?: whatsappOficialMaxOrderByAggregateInput
    _min?: whatsappOficialMinOrderByAggregateInput
    _sum?: whatsappOficialSumOrderByAggregateInput
  }

  export type whatsappOficialScalarWhereWithAggregatesInput = {
    AND?: whatsappOficialScalarWhereWithAggregatesInput | whatsappOficialScalarWhereWithAggregatesInput[]
    OR?: whatsappOficialScalarWhereWithAggregatesInput[]
    NOT?: whatsappOficialScalarWhereWithAggregatesInput | whatsappOficialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"whatsappOficial"> | number
    phone_number_id?: StringWithAggregatesFilter<"whatsappOficial"> | string
    waba_id?: StringWithAggregatesFilter<"whatsappOficial"> | string
    send_token?: StringWithAggregatesFilter<"whatsappOficial"> | string
    business_id?: StringWithAggregatesFilter<"whatsappOficial"> | string
    phone_number?: StringWithAggregatesFilter<"whatsappOficial"> | string
    companyId?: IntWithAggregatesFilter<"whatsappOficial"> | number
    use_rabbitmq?: BoolWithAggregatesFilter<"whatsappOficial"> | boolean
    token_mult100?: StringWithAggregatesFilter<"whatsappOficial"> | string
    create_at?: DateTimeNullableWithAggregatesFilter<"whatsappOficial"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"whatsappOficial"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"whatsappOficial"> | Date | string | null
    chatwoot_webhook_url?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    auth_token_chatwoot?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    n8n_webhook_url?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    auth_token_n8n?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    crm_webhook_url?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    auth_token_crm?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    typebot_webhook_url?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    auth_token_typebot?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    rabbitmq_exchange?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    rabbitmq_queue?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
    rabbitmq_routing_key?: StringNullableWithAggregatesFilter<"whatsappOficial"> | string | null
  }

  export type sendMessageWhatsAppWhereInput = {
    AND?: sendMessageWhatsAppWhereInput | sendMessageWhatsAppWhereInput[]
    OR?: sendMessageWhatsAppWhereInput[]
    NOT?: sendMessageWhatsAppWhereInput | sendMessageWhatsAppWhereInput[]
    id?: IntFilter<"sendMessageWhatsApp"> | number
    create_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    update_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    type?: EnumtypeMessageFilter<"sendMessageWhatsApp"> | $Enums.typeMessage
    to?: StringFilter<"sendMessageWhatsApp"> | string
    text?: JsonNullableFilter<"sendMessageWhatsApp">
    reaction?: JsonNullableFilter<"sendMessageWhatsApp">
    audio?: JsonNullableFilter<"sendMessageWhatsApp">
    document?: JsonNullableFilter<"sendMessageWhatsApp">
    image?: JsonNullableFilter<"sendMessageWhatsApp">
    sticker?: JsonNullableFilter<"sendMessageWhatsApp">
    video?: JsonNullableFilter<"sendMessageWhatsApp">
    location?: JsonNullableFilter<"sendMessageWhatsApp">
    contacts?: JsonNullableFilter<"sendMessageWhatsApp">
    interactive?: JsonNullableFilter<"sendMessageWhatsApp">
    template?: JsonNullableFilter<"sendMessageWhatsApp">
    enviada?: BoolFilter<"sendMessageWhatsApp"> | boolean
    pathFile?: StringNullableFilter<"sendMessageWhatsApp"> | string | null
    idFileMeta?: StringNullableFilter<"sendMessageWhatsApp"> | string | null
    whatsappOficialId?: IntFilter<"sendMessageWhatsApp"> | number
    idMessageWhatsApp?: JsonNullableFilter<"sendMessageWhatsApp">
    whats?: XOR<WhatsappOficialRelationFilter, whatsappOficialWhereInput>
  }

  export type sendMessageWhatsAppOrderByWithRelationInput = {
    id?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    type?: SortOrder
    to?: SortOrder
    text?: SortOrderInput | SortOrder
    reaction?: SortOrderInput | SortOrder
    audio?: SortOrderInput | SortOrder
    document?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    sticker?: SortOrderInput | SortOrder
    video?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    contacts?: SortOrderInput | SortOrder
    interactive?: SortOrderInput | SortOrder
    template?: SortOrderInput | SortOrder
    enviada?: SortOrder
    pathFile?: SortOrderInput | SortOrder
    idFileMeta?: SortOrderInput | SortOrder
    whatsappOficialId?: SortOrder
    idMessageWhatsApp?: SortOrderInput | SortOrder
    whats?: whatsappOficialOrderByWithRelationInput
  }

  export type sendMessageWhatsAppWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sendMessageWhatsAppWhereInput | sendMessageWhatsAppWhereInput[]
    OR?: sendMessageWhatsAppWhereInput[]
    NOT?: sendMessageWhatsAppWhereInput | sendMessageWhatsAppWhereInput[]
    create_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    update_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    type?: EnumtypeMessageFilter<"sendMessageWhatsApp"> | $Enums.typeMessage
    to?: StringFilter<"sendMessageWhatsApp"> | string
    text?: JsonNullableFilter<"sendMessageWhatsApp">
    reaction?: JsonNullableFilter<"sendMessageWhatsApp">
    audio?: JsonNullableFilter<"sendMessageWhatsApp">
    document?: JsonNullableFilter<"sendMessageWhatsApp">
    image?: JsonNullableFilter<"sendMessageWhatsApp">
    sticker?: JsonNullableFilter<"sendMessageWhatsApp">
    video?: JsonNullableFilter<"sendMessageWhatsApp">
    location?: JsonNullableFilter<"sendMessageWhatsApp">
    contacts?: JsonNullableFilter<"sendMessageWhatsApp">
    interactive?: JsonNullableFilter<"sendMessageWhatsApp">
    template?: JsonNullableFilter<"sendMessageWhatsApp">
    enviada?: BoolFilter<"sendMessageWhatsApp"> | boolean
    pathFile?: StringNullableFilter<"sendMessageWhatsApp"> | string | null
    idFileMeta?: StringNullableFilter<"sendMessageWhatsApp"> | string | null
    whatsappOficialId?: IntFilter<"sendMessageWhatsApp"> | number
    idMessageWhatsApp?: JsonNullableFilter<"sendMessageWhatsApp">
    whats?: XOR<WhatsappOficialRelationFilter, whatsappOficialWhereInput>
  }, "id">

  export type sendMessageWhatsAppOrderByWithAggregationInput = {
    id?: SortOrder
    create_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    type?: SortOrder
    to?: SortOrder
    text?: SortOrderInput | SortOrder
    reaction?: SortOrderInput | SortOrder
    audio?: SortOrderInput | SortOrder
    document?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    sticker?: SortOrderInput | SortOrder
    video?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    contacts?: SortOrderInput | SortOrder
    interactive?: SortOrderInput | SortOrder
    template?: SortOrderInput | SortOrder
    enviada?: SortOrder
    pathFile?: SortOrderInput | SortOrder
    idFileMeta?: SortOrderInput | SortOrder
    whatsappOficialId?: SortOrder
    idMessageWhatsApp?: SortOrderInput | SortOrder
    _count?: sendMessageWhatsAppCountOrderByAggregateInput
    _avg?: sendMessageWhatsAppAvgOrderByAggregateInput
    _max?: sendMessageWhatsAppMaxOrderByAggregateInput
    _min?: sendMessageWhatsAppMinOrderByAggregateInput
    _sum?: sendMessageWhatsAppSumOrderByAggregateInput
  }

  export type sendMessageWhatsAppScalarWhereWithAggregatesInput = {
    AND?: sendMessageWhatsAppScalarWhereWithAggregatesInput | sendMessageWhatsAppScalarWhereWithAggregatesInput[]
    OR?: sendMessageWhatsAppScalarWhereWithAggregatesInput[]
    NOT?: sendMessageWhatsAppScalarWhereWithAggregatesInput | sendMessageWhatsAppScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sendMessageWhatsApp"> | number
    create_at?: DateTimeNullableWithAggregatesFilter<"sendMessageWhatsApp"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"sendMessageWhatsApp"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sendMessageWhatsApp"> | Date | string | null
    type?: EnumtypeMessageWithAggregatesFilter<"sendMessageWhatsApp"> | $Enums.typeMessage
    to?: StringWithAggregatesFilter<"sendMessageWhatsApp"> | string
    text?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    reaction?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    audio?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    document?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    image?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    sticker?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    video?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    location?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    contacts?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    interactive?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    template?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
    enviada?: BoolWithAggregatesFilter<"sendMessageWhatsApp"> | boolean
    pathFile?: StringNullableWithAggregatesFilter<"sendMessageWhatsApp"> | string | null
    idFileMeta?: StringNullableWithAggregatesFilter<"sendMessageWhatsApp"> | string | null
    whatsappOficialId?: IntWithAggregatesFilter<"sendMessageWhatsApp"> | number
    idMessageWhatsApp?: JsonNullableWithAggregatesFilter<"sendMessageWhatsApp">
  }

  export type companyCreateInput = {
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    name: string
    idEmpresaMult100: number
    token?: string
    whatsappOficial?: whatsappOficialCreateNestedManyWithoutCompanyInput
  }

  export type companyUncheckedCreateInput = {
    id?: number
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    name: string
    idEmpresaMult100: number
    token?: string
    whatsappOficial?: whatsappOficialUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type companyUpdateInput = {
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: StringFieldUpdateOperationsInput | string
    idEmpresaMult100?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    whatsappOficial?: whatsappOficialUpdateManyWithoutCompanyNestedInput
  }

  export type companyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: StringFieldUpdateOperationsInput | string
    idEmpresaMult100?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    whatsappOficial?: whatsappOficialUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type companyCreateManyInput = {
    id?: number
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    name: string
    idEmpresaMult100: number
    token?: string
  }

  export type companyUpdateManyMutationInput = {
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: StringFieldUpdateOperationsInput | string
    idEmpresaMult100?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
  }

  export type companyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: StringFieldUpdateOperationsInput | string
    idEmpresaMult100?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
  }

  export type whatsappOficialCreateInput = {
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
    company: companyCreateNestedOneWithoutWhatsappOficialInput
    sendMessageWhatsApp?: sendMessageWhatsAppCreateNestedManyWithoutWhatsInput
  }

  export type whatsappOficialUncheckedCreateInput = {
    id?: number
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    companyId: number
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
    sendMessageWhatsApp?: sendMessageWhatsAppUncheckedCreateNestedManyWithoutWhatsInput
  }

  export type whatsappOficialUpdateInput = {
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
    company?: companyUpdateOneRequiredWithoutWhatsappOficialNestedInput
    sendMessageWhatsApp?: sendMessageWhatsAppUpdateManyWithoutWhatsNestedInput
  }

  export type whatsappOficialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    companyId?: IntFieldUpdateOperationsInput | number
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
    sendMessageWhatsApp?: sendMessageWhatsAppUncheckedUpdateManyWithoutWhatsNestedInput
  }

  export type whatsappOficialCreateManyInput = {
    id?: number
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    companyId: number
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
  }

  export type whatsappOficialUpdateManyMutationInput = {
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type whatsappOficialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    companyId?: IntFieldUpdateOperationsInput | number
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sendMessageWhatsAppCreateInput = {
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    type: $Enums.typeMessage
    to: string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: boolean
    pathFile?: string | null
    idFileMeta?: string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
    whats: whatsappOficialCreateNestedOneWithoutSendMessageWhatsAppInput
  }

  export type sendMessageWhatsAppUncheckedCreateInput = {
    id?: number
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    type: $Enums.typeMessage
    to: string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: boolean
    pathFile?: string | null
    idFileMeta?: string | null
    whatsappOficialId: number
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppUpdateInput = {
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: EnumtypeMessageFieldUpdateOperationsInput | $Enums.typeMessage
    to?: StringFieldUpdateOperationsInput | string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: BoolFieldUpdateOperationsInput | boolean
    pathFile?: NullableStringFieldUpdateOperationsInput | string | null
    idFileMeta?: NullableStringFieldUpdateOperationsInput | string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
    whats?: whatsappOficialUpdateOneRequiredWithoutSendMessageWhatsAppNestedInput
  }

  export type sendMessageWhatsAppUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: EnumtypeMessageFieldUpdateOperationsInput | $Enums.typeMessage
    to?: StringFieldUpdateOperationsInput | string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: BoolFieldUpdateOperationsInput | boolean
    pathFile?: NullableStringFieldUpdateOperationsInput | string | null
    idFileMeta?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappOficialId?: IntFieldUpdateOperationsInput | number
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppCreateManyInput = {
    id?: number
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    type: $Enums.typeMessage
    to: string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: boolean
    pathFile?: string | null
    idFileMeta?: string | null
    whatsappOficialId: number
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppUpdateManyMutationInput = {
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: EnumtypeMessageFieldUpdateOperationsInput | $Enums.typeMessage
    to?: StringFieldUpdateOperationsInput | string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: BoolFieldUpdateOperationsInput | boolean
    pathFile?: NullableStringFieldUpdateOperationsInput | string | null
    idFileMeta?: NullableStringFieldUpdateOperationsInput | string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: EnumtypeMessageFieldUpdateOperationsInput | $Enums.typeMessage
    to?: StringFieldUpdateOperationsInput | string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: BoolFieldUpdateOperationsInput | boolean
    pathFile?: NullableStringFieldUpdateOperationsInput | string | null
    idFileMeta?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappOficialId?: IntFieldUpdateOperationsInput | number
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type WhatsappOficialListRelationFilter = {
    every?: whatsappOficialWhereInput
    some?: whatsappOficialWhereInput
    none?: whatsappOficialWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type whatsappOficialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type companyCountOrderByAggregateInput = {
    id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    name?: SortOrder
    idEmpresaMult100?: SortOrder
    token?: SortOrder
  }

  export type companyAvgOrderByAggregateInput = {
    id?: SortOrder
    idEmpresaMult100?: SortOrder
  }

  export type companyMaxOrderByAggregateInput = {
    id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    name?: SortOrder
    idEmpresaMult100?: SortOrder
    token?: SortOrder
  }

  export type companyMinOrderByAggregateInput = {
    id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    name?: SortOrder
    idEmpresaMult100?: SortOrder
    token?: SortOrder
  }

  export type companySumOrderByAggregateInput = {
    id?: SortOrder
    idEmpresaMult100?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type CompanyRelationFilter = {
    is?: companyWhereInput
    isNot?: companyWhereInput
  }

  export type SendMessageWhatsAppListRelationFilter = {
    every?: sendMessageWhatsAppWhereInput
    some?: sendMessageWhatsAppWhereInput
    none?: sendMessageWhatsAppWhereInput
  }

  export type sendMessageWhatsAppOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type whatsappOficialCountOrderByAggregateInput = {
    id?: SortOrder
    phone_number_id?: SortOrder
    waba_id?: SortOrder
    send_token?: SortOrder
    business_id?: SortOrder
    phone_number?: SortOrder
    companyId?: SortOrder
    use_rabbitmq?: SortOrder
    token_mult100?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    chatwoot_webhook_url?: SortOrder
    auth_token_chatwoot?: SortOrder
    n8n_webhook_url?: SortOrder
    auth_token_n8n?: SortOrder
    crm_webhook_url?: SortOrder
    auth_token_crm?: SortOrder
    typebot_webhook_url?: SortOrder
    auth_token_typebot?: SortOrder
    rabbitmq_exchange?: SortOrder
    rabbitmq_queue?: SortOrder
    rabbitmq_routing_key?: SortOrder
  }

  export type whatsappOficialAvgOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type whatsappOficialMaxOrderByAggregateInput = {
    id?: SortOrder
    phone_number_id?: SortOrder
    waba_id?: SortOrder
    send_token?: SortOrder
    business_id?: SortOrder
    phone_number?: SortOrder
    companyId?: SortOrder
    use_rabbitmq?: SortOrder
    token_mult100?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    chatwoot_webhook_url?: SortOrder
    auth_token_chatwoot?: SortOrder
    n8n_webhook_url?: SortOrder
    auth_token_n8n?: SortOrder
    crm_webhook_url?: SortOrder
    auth_token_crm?: SortOrder
    typebot_webhook_url?: SortOrder
    auth_token_typebot?: SortOrder
    rabbitmq_exchange?: SortOrder
    rabbitmq_queue?: SortOrder
    rabbitmq_routing_key?: SortOrder
  }

  export type whatsappOficialMinOrderByAggregateInput = {
    id?: SortOrder
    phone_number_id?: SortOrder
    waba_id?: SortOrder
    send_token?: SortOrder
    business_id?: SortOrder
    phone_number?: SortOrder
    companyId?: SortOrder
    use_rabbitmq?: SortOrder
    token_mult100?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    chatwoot_webhook_url?: SortOrder
    auth_token_chatwoot?: SortOrder
    n8n_webhook_url?: SortOrder
    auth_token_n8n?: SortOrder
    crm_webhook_url?: SortOrder
    auth_token_crm?: SortOrder
    typebot_webhook_url?: SortOrder
    auth_token_typebot?: SortOrder
    rabbitmq_exchange?: SortOrder
    rabbitmq_queue?: SortOrder
    rabbitmq_routing_key?: SortOrder
  }

  export type whatsappOficialSumOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumtypeMessageFilter<$PrismaModel = never> = {
    equals?: $Enums.typeMessage | EnumtypeMessageFieldRefInput<$PrismaModel>
    in?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    notIn?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    not?: NestedEnumtypeMessageFilter<$PrismaModel> | $Enums.typeMessage
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type WhatsappOficialRelationFilter = {
    is?: whatsappOficialWhereInput
    isNot?: whatsappOficialWhereInput
  }

  export type sendMessageWhatsAppCountOrderByAggregateInput = {
    id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    type?: SortOrder
    to?: SortOrder
    text?: SortOrder
    reaction?: SortOrder
    audio?: SortOrder
    document?: SortOrder
    image?: SortOrder
    sticker?: SortOrder
    video?: SortOrder
    location?: SortOrder
    contacts?: SortOrder
    interactive?: SortOrder
    template?: SortOrder
    enviada?: SortOrder
    pathFile?: SortOrder
    idFileMeta?: SortOrder
    whatsappOficialId?: SortOrder
    idMessageWhatsApp?: SortOrder
  }

  export type sendMessageWhatsAppAvgOrderByAggregateInput = {
    id?: SortOrder
    whatsappOficialId?: SortOrder
  }

  export type sendMessageWhatsAppMaxOrderByAggregateInput = {
    id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    type?: SortOrder
    to?: SortOrder
    enviada?: SortOrder
    pathFile?: SortOrder
    idFileMeta?: SortOrder
    whatsappOficialId?: SortOrder
  }

  export type sendMessageWhatsAppMinOrderByAggregateInput = {
    id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    deleted_at?: SortOrder
    type?: SortOrder
    to?: SortOrder
    enviada?: SortOrder
    pathFile?: SortOrder
    idFileMeta?: SortOrder
    whatsappOficialId?: SortOrder
  }

  export type sendMessageWhatsAppSumOrderByAggregateInput = {
    id?: SortOrder
    whatsappOficialId?: SortOrder
  }

  export type EnumtypeMessageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.typeMessage | EnumtypeMessageFieldRefInput<$PrismaModel>
    in?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    notIn?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    not?: NestedEnumtypeMessageWithAggregatesFilter<$PrismaModel> | $Enums.typeMessage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtypeMessageFilter<$PrismaModel>
    _max?: NestedEnumtypeMessageFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type whatsappOficialCreateNestedManyWithoutCompanyInput = {
    create?: XOR<whatsappOficialCreateWithoutCompanyInput, whatsappOficialUncheckedCreateWithoutCompanyInput> | whatsappOficialCreateWithoutCompanyInput[] | whatsappOficialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: whatsappOficialCreateOrConnectWithoutCompanyInput | whatsappOficialCreateOrConnectWithoutCompanyInput[]
    createMany?: whatsappOficialCreateManyCompanyInputEnvelope
    connect?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
  }

  export type whatsappOficialUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<whatsappOficialCreateWithoutCompanyInput, whatsappOficialUncheckedCreateWithoutCompanyInput> | whatsappOficialCreateWithoutCompanyInput[] | whatsappOficialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: whatsappOficialCreateOrConnectWithoutCompanyInput | whatsappOficialCreateOrConnectWithoutCompanyInput[]
    createMany?: whatsappOficialCreateManyCompanyInputEnvelope
    connect?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type whatsappOficialUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<whatsappOficialCreateWithoutCompanyInput, whatsappOficialUncheckedCreateWithoutCompanyInput> | whatsappOficialCreateWithoutCompanyInput[] | whatsappOficialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: whatsappOficialCreateOrConnectWithoutCompanyInput | whatsappOficialCreateOrConnectWithoutCompanyInput[]
    upsert?: whatsappOficialUpsertWithWhereUniqueWithoutCompanyInput | whatsappOficialUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: whatsappOficialCreateManyCompanyInputEnvelope
    set?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    disconnect?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    delete?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    connect?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    update?: whatsappOficialUpdateWithWhereUniqueWithoutCompanyInput | whatsappOficialUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: whatsappOficialUpdateManyWithWhereWithoutCompanyInput | whatsappOficialUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: whatsappOficialScalarWhereInput | whatsappOficialScalarWhereInput[]
  }

  export type whatsappOficialUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<whatsappOficialCreateWithoutCompanyInput, whatsappOficialUncheckedCreateWithoutCompanyInput> | whatsappOficialCreateWithoutCompanyInput[] | whatsappOficialUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: whatsappOficialCreateOrConnectWithoutCompanyInput | whatsappOficialCreateOrConnectWithoutCompanyInput[]
    upsert?: whatsappOficialUpsertWithWhereUniqueWithoutCompanyInput | whatsappOficialUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: whatsappOficialCreateManyCompanyInputEnvelope
    set?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    disconnect?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    delete?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    connect?: whatsappOficialWhereUniqueInput | whatsappOficialWhereUniqueInput[]
    update?: whatsappOficialUpdateWithWhereUniqueWithoutCompanyInput | whatsappOficialUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: whatsappOficialUpdateManyWithWhereWithoutCompanyInput | whatsappOficialUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: whatsappOficialScalarWhereInput | whatsappOficialScalarWhereInput[]
  }

  export type companyCreateNestedOneWithoutWhatsappOficialInput = {
    create?: XOR<companyCreateWithoutWhatsappOficialInput, companyUncheckedCreateWithoutWhatsappOficialInput>
    connectOrCreate?: companyCreateOrConnectWithoutWhatsappOficialInput
    connect?: companyWhereUniqueInput
  }

  export type sendMessageWhatsAppCreateNestedManyWithoutWhatsInput = {
    create?: XOR<sendMessageWhatsAppCreateWithoutWhatsInput, sendMessageWhatsAppUncheckedCreateWithoutWhatsInput> | sendMessageWhatsAppCreateWithoutWhatsInput[] | sendMessageWhatsAppUncheckedCreateWithoutWhatsInput[]
    connectOrCreate?: sendMessageWhatsAppCreateOrConnectWithoutWhatsInput | sendMessageWhatsAppCreateOrConnectWithoutWhatsInput[]
    createMany?: sendMessageWhatsAppCreateManyWhatsInputEnvelope
    connect?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
  }

  export type sendMessageWhatsAppUncheckedCreateNestedManyWithoutWhatsInput = {
    create?: XOR<sendMessageWhatsAppCreateWithoutWhatsInput, sendMessageWhatsAppUncheckedCreateWithoutWhatsInput> | sendMessageWhatsAppCreateWithoutWhatsInput[] | sendMessageWhatsAppUncheckedCreateWithoutWhatsInput[]
    connectOrCreate?: sendMessageWhatsAppCreateOrConnectWithoutWhatsInput | sendMessageWhatsAppCreateOrConnectWithoutWhatsInput[]
    createMany?: sendMessageWhatsAppCreateManyWhatsInputEnvelope
    connect?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type companyUpdateOneRequiredWithoutWhatsappOficialNestedInput = {
    create?: XOR<companyCreateWithoutWhatsappOficialInput, companyUncheckedCreateWithoutWhatsappOficialInput>
    connectOrCreate?: companyCreateOrConnectWithoutWhatsappOficialInput
    upsert?: companyUpsertWithoutWhatsappOficialInput
    connect?: companyWhereUniqueInput
    update?: XOR<XOR<companyUpdateToOneWithWhereWithoutWhatsappOficialInput, companyUpdateWithoutWhatsappOficialInput>, companyUncheckedUpdateWithoutWhatsappOficialInput>
  }

  export type sendMessageWhatsAppUpdateManyWithoutWhatsNestedInput = {
    create?: XOR<sendMessageWhatsAppCreateWithoutWhatsInput, sendMessageWhatsAppUncheckedCreateWithoutWhatsInput> | sendMessageWhatsAppCreateWithoutWhatsInput[] | sendMessageWhatsAppUncheckedCreateWithoutWhatsInput[]
    connectOrCreate?: sendMessageWhatsAppCreateOrConnectWithoutWhatsInput | sendMessageWhatsAppCreateOrConnectWithoutWhatsInput[]
    upsert?: sendMessageWhatsAppUpsertWithWhereUniqueWithoutWhatsInput | sendMessageWhatsAppUpsertWithWhereUniqueWithoutWhatsInput[]
    createMany?: sendMessageWhatsAppCreateManyWhatsInputEnvelope
    set?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    disconnect?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    delete?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    connect?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    update?: sendMessageWhatsAppUpdateWithWhereUniqueWithoutWhatsInput | sendMessageWhatsAppUpdateWithWhereUniqueWithoutWhatsInput[]
    updateMany?: sendMessageWhatsAppUpdateManyWithWhereWithoutWhatsInput | sendMessageWhatsAppUpdateManyWithWhereWithoutWhatsInput[]
    deleteMany?: sendMessageWhatsAppScalarWhereInput | sendMessageWhatsAppScalarWhereInput[]
  }

  export type sendMessageWhatsAppUncheckedUpdateManyWithoutWhatsNestedInput = {
    create?: XOR<sendMessageWhatsAppCreateWithoutWhatsInput, sendMessageWhatsAppUncheckedCreateWithoutWhatsInput> | sendMessageWhatsAppCreateWithoutWhatsInput[] | sendMessageWhatsAppUncheckedCreateWithoutWhatsInput[]
    connectOrCreate?: sendMessageWhatsAppCreateOrConnectWithoutWhatsInput | sendMessageWhatsAppCreateOrConnectWithoutWhatsInput[]
    upsert?: sendMessageWhatsAppUpsertWithWhereUniqueWithoutWhatsInput | sendMessageWhatsAppUpsertWithWhereUniqueWithoutWhatsInput[]
    createMany?: sendMessageWhatsAppCreateManyWhatsInputEnvelope
    set?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    disconnect?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    delete?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    connect?: sendMessageWhatsAppWhereUniqueInput | sendMessageWhatsAppWhereUniqueInput[]
    update?: sendMessageWhatsAppUpdateWithWhereUniqueWithoutWhatsInput | sendMessageWhatsAppUpdateWithWhereUniqueWithoutWhatsInput[]
    updateMany?: sendMessageWhatsAppUpdateManyWithWhereWithoutWhatsInput | sendMessageWhatsAppUpdateManyWithWhereWithoutWhatsInput[]
    deleteMany?: sendMessageWhatsAppScalarWhereInput | sendMessageWhatsAppScalarWhereInput[]
  }

  export type whatsappOficialCreateNestedOneWithoutSendMessageWhatsAppInput = {
    create?: XOR<whatsappOficialCreateWithoutSendMessageWhatsAppInput, whatsappOficialUncheckedCreateWithoutSendMessageWhatsAppInput>
    connectOrCreate?: whatsappOficialCreateOrConnectWithoutSendMessageWhatsAppInput
    connect?: whatsappOficialWhereUniqueInput
  }

  export type EnumtypeMessageFieldUpdateOperationsInput = {
    set?: $Enums.typeMessage
  }

  export type whatsappOficialUpdateOneRequiredWithoutSendMessageWhatsAppNestedInput = {
    create?: XOR<whatsappOficialCreateWithoutSendMessageWhatsAppInput, whatsappOficialUncheckedCreateWithoutSendMessageWhatsAppInput>
    connectOrCreate?: whatsappOficialCreateOrConnectWithoutSendMessageWhatsAppInput
    upsert?: whatsappOficialUpsertWithoutSendMessageWhatsAppInput
    connect?: whatsappOficialWhereUniqueInput
    update?: XOR<XOR<whatsappOficialUpdateToOneWithWhereWithoutSendMessageWhatsAppInput, whatsappOficialUpdateWithoutSendMessageWhatsAppInput>, whatsappOficialUncheckedUpdateWithoutSendMessageWhatsAppInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumtypeMessageFilter<$PrismaModel = never> = {
    equals?: $Enums.typeMessage | EnumtypeMessageFieldRefInput<$PrismaModel>
    in?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    notIn?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    not?: NestedEnumtypeMessageFilter<$PrismaModel> | $Enums.typeMessage
  }

  export type NestedEnumtypeMessageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.typeMessage | EnumtypeMessageFieldRefInput<$PrismaModel>
    in?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    notIn?: $Enums.typeMessage[] | ListEnumtypeMessageFieldRefInput<$PrismaModel>
    not?: NestedEnumtypeMessageWithAggregatesFilter<$PrismaModel> | $Enums.typeMessage
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtypeMessageFilter<$PrismaModel>
    _max?: NestedEnumtypeMessageFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type whatsappOficialCreateWithoutCompanyInput = {
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
    sendMessageWhatsApp?: sendMessageWhatsAppCreateNestedManyWithoutWhatsInput
  }

  export type whatsappOficialUncheckedCreateWithoutCompanyInput = {
    id?: number
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
    sendMessageWhatsApp?: sendMessageWhatsAppUncheckedCreateNestedManyWithoutWhatsInput
  }

  export type whatsappOficialCreateOrConnectWithoutCompanyInput = {
    where: whatsappOficialWhereUniqueInput
    create: XOR<whatsappOficialCreateWithoutCompanyInput, whatsappOficialUncheckedCreateWithoutCompanyInput>
  }

  export type whatsappOficialCreateManyCompanyInputEnvelope = {
    data: whatsappOficialCreateManyCompanyInput | whatsappOficialCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type whatsappOficialUpsertWithWhereUniqueWithoutCompanyInput = {
    where: whatsappOficialWhereUniqueInput
    update: XOR<whatsappOficialUpdateWithoutCompanyInput, whatsappOficialUncheckedUpdateWithoutCompanyInput>
    create: XOR<whatsappOficialCreateWithoutCompanyInput, whatsappOficialUncheckedCreateWithoutCompanyInput>
  }

  export type whatsappOficialUpdateWithWhereUniqueWithoutCompanyInput = {
    where: whatsappOficialWhereUniqueInput
    data: XOR<whatsappOficialUpdateWithoutCompanyInput, whatsappOficialUncheckedUpdateWithoutCompanyInput>
  }

  export type whatsappOficialUpdateManyWithWhereWithoutCompanyInput = {
    where: whatsappOficialScalarWhereInput
    data: XOR<whatsappOficialUpdateManyMutationInput, whatsappOficialUncheckedUpdateManyWithoutCompanyInput>
  }

  export type whatsappOficialScalarWhereInput = {
    AND?: whatsappOficialScalarWhereInput | whatsappOficialScalarWhereInput[]
    OR?: whatsappOficialScalarWhereInput[]
    NOT?: whatsappOficialScalarWhereInput | whatsappOficialScalarWhereInput[]
    id?: IntFilter<"whatsappOficial"> | number
    phone_number_id?: StringFilter<"whatsappOficial"> | string
    waba_id?: StringFilter<"whatsappOficial"> | string
    send_token?: StringFilter<"whatsappOficial"> | string
    business_id?: StringFilter<"whatsappOficial"> | string
    phone_number?: StringFilter<"whatsappOficial"> | string
    companyId?: IntFilter<"whatsappOficial"> | number
    use_rabbitmq?: BoolFilter<"whatsappOficial"> | boolean
    token_mult100?: StringFilter<"whatsappOficial"> | string
    create_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    update_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"whatsappOficial"> | Date | string | null
    chatwoot_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_chatwoot?: StringNullableFilter<"whatsappOficial"> | string | null
    n8n_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_n8n?: StringNullableFilter<"whatsappOficial"> | string | null
    crm_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_crm?: StringNullableFilter<"whatsappOficial"> | string | null
    typebot_webhook_url?: StringNullableFilter<"whatsappOficial"> | string | null
    auth_token_typebot?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_exchange?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_queue?: StringNullableFilter<"whatsappOficial"> | string | null
    rabbitmq_routing_key?: StringNullableFilter<"whatsappOficial"> | string | null
  }

  export type companyCreateWithoutWhatsappOficialInput = {
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    name: string
    idEmpresaMult100: number
    token?: string
  }

  export type companyUncheckedCreateWithoutWhatsappOficialInput = {
    id?: number
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    name: string
    idEmpresaMult100: number
    token?: string
  }

  export type companyCreateOrConnectWithoutWhatsappOficialInput = {
    where: companyWhereUniqueInput
    create: XOR<companyCreateWithoutWhatsappOficialInput, companyUncheckedCreateWithoutWhatsappOficialInput>
  }

  export type sendMessageWhatsAppCreateWithoutWhatsInput = {
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    type: $Enums.typeMessage
    to: string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: boolean
    pathFile?: string | null
    idFileMeta?: string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppUncheckedCreateWithoutWhatsInput = {
    id?: number
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    type: $Enums.typeMessage
    to: string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: boolean
    pathFile?: string | null
    idFileMeta?: string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppCreateOrConnectWithoutWhatsInput = {
    where: sendMessageWhatsAppWhereUniqueInput
    create: XOR<sendMessageWhatsAppCreateWithoutWhatsInput, sendMessageWhatsAppUncheckedCreateWithoutWhatsInput>
  }

  export type sendMessageWhatsAppCreateManyWhatsInputEnvelope = {
    data: sendMessageWhatsAppCreateManyWhatsInput | sendMessageWhatsAppCreateManyWhatsInput[]
    skipDuplicates?: boolean
  }

  export type companyUpsertWithoutWhatsappOficialInput = {
    update: XOR<companyUpdateWithoutWhatsappOficialInput, companyUncheckedUpdateWithoutWhatsappOficialInput>
    create: XOR<companyCreateWithoutWhatsappOficialInput, companyUncheckedCreateWithoutWhatsappOficialInput>
    where?: companyWhereInput
  }

  export type companyUpdateToOneWithWhereWithoutWhatsappOficialInput = {
    where?: companyWhereInput
    data: XOR<companyUpdateWithoutWhatsappOficialInput, companyUncheckedUpdateWithoutWhatsappOficialInput>
  }

  export type companyUpdateWithoutWhatsappOficialInput = {
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: StringFieldUpdateOperationsInput | string
    idEmpresaMult100?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
  }

  export type companyUncheckedUpdateWithoutWhatsappOficialInput = {
    id?: IntFieldUpdateOperationsInput | number
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: StringFieldUpdateOperationsInput | string
    idEmpresaMult100?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
  }

  export type sendMessageWhatsAppUpsertWithWhereUniqueWithoutWhatsInput = {
    where: sendMessageWhatsAppWhereUniqueInput
    update: XOR<sendMessageWhatsAppUpdateWithoutWhatsInput, sendMessageWhatsAppUncheckedUpdateWithoutWhatsInput>
    create: XOR<sendMessageWhatsAppCreateWithoutWhatsInput, sendMessageWhatsAppUncheckedCreateWithoutWhatsInput>
  }

  export type sendMessageWhatsAppUpdateWithWhereUniqueWithoutWhatsInput = {
    where: sendMessageWhatsAppWhereUniqueInput
    data: XOR<sendMessageWhatsAppUpdateWithoutWhatsInput, sendMessageWhatsAppUncheckedUpdateWithoutWhatsInput>
  }

  export type sendMessageWhatsAppUpdateManyWithWhereWithoutWhatsInput = {
    where: sendMessageWhatsAppScalarWhereInput
    data: XOR<sendMessageWhatsAppUpdateManyMutationInput, sendMessageWhatsAppUncheckedUpdateManyWithoutWhatsInput>
  }

  export type sendMessageWhatsAppScalarWhereInput = {
    AND?: sendMessageWhatsAppScalarWhereInput | sendMessageWhatsAppScalarWhereInput[]
    OR?: sendMessageWhatsAppScalarWhereInput[]
    NOT?: sendMessageWhatsAppScalarWhereInput | sendMessageWhatsAppScalarWhereInput[]
    id?: IntFilter<"sendMessageWhatsApp"> | number
    create_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    update_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sendMessageWhatsApp"> | Date | string | null
    type?: EnumtypeMessageFilter<"sendMessageWhatsApp"> | $Enums.typeMessage
    to?: StringFilter<"sendMessageWhatsApp"> | string
    text?: JsonNullableFilter<"sendMessageWhatsApp">
    reaction?: JsonNullableFilter<"sendMessageWhatsApp">
    audio?: JsonNullableFilter<"sendMessageWhatsApp">
    document?: JsonNullableFilter<"sendMessageWhatsApp">
    image?: JsonNullableFilter<"sendMessageWhatsApp">
    sticker?: JsonNullableFilter<"sendMessageWhatsApp">
    video?: JsonNullableFilter<"sendMessageWhatsApp">
    location?: JsonNullableFilter<"sendMessageWhatsApp">
    contacts?: JsonNullableFilter<"sendMessageWhatsApp">
    interactive?: JsonNullableFilter<"sendMessageWhatsApp">
    template?: JsonNullableFilter<"sendMessageWhatsApp">
    enviada?: BoolFilter<"sendMessageWhatsApp"> | boolean
    pathFile?: StringNullableFilter<"sendMessageWhatsApp"> | string | null
    idFileMeta?: StringNullableFilter<"sendMessageWhatsApp"> | string | null
    whatsappOficialId?: IntFilter<"sendMessageWhatsApp"> | number
    idMessageWhatsApp?: JsonNullableFilter<"sendMessageWhatsApp">
  }

  export type whatsappOficialCreateWithoutSendMessageWhatsAppInput = {
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
    company: companyCreateNestedOneWithoutWhatsappOficialInput
  }

  export type whatsappOficialUncheckedCreateWithoutSendMessageWhatsAppInput = {
    id?: number
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    companyId: number
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
  }

  export type whatsappOficialCreateOrConnectWithoutSendMessageWhatsAppInput = {
    where: whatsappOficialWhereUniqueInput
    create: XOR<whatsappOficialCreateWithoutSendMessageWhatsAppInput, whatsappOficialUncheckedCreateWithoutSendMessageWhatsAppInput>
  }

  export type whatsappOficialUpsertWithoutSendMessageWhatsAppInput = {
    update: XOR<whatsappOficialUpdateWithoutSendMessageWhatsAppInput, whatsappOficialUncheckedUpdateWithoutSendMessageWhatsAppInput>
    create: XOR<whatsappOficialCreateWithoutSendMessageWhatsAppInput, whatsappOficialUncheckedCreateWithoutSendMessageWhatsAppInput>
    where?: whatsappOficialWhereInput
  }

  export type whatsappOficialUpdateToOneWithWhereWithoutSendMessageWhatsAppInput = {
    where?: whatsappOficialWhereInput
    data: XOR<whatsappOficialUpdateWithoutSendMessageWhatsAppInput, whatsappOficialUncheckedUpdateWithoutSendMessageWhatsAppInput>
  }

  export type whatsappOficialUpdateWithoutSendMessageWhatsAppInput = {
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
    company?: companyUpdateOneRequiredWithoutWhatsappOficialNestedInput
  }

  export type whatsappOficialUncheckedUpdateWithoutSendMessageWhatsAppInput = {
    id?: IntFieldUpdateOperationsInput | number
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    companyId?: IntFieldUpdateOperationsInput | number
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type whatsappOficialCreateManyCompanyInput = {
    id?: number
    phone_number_id: string
    waba_id: string
    send_token: string
    business_id: string
    phone_number: string
    use_rabbitmq?: boolean
    token_mult100: string
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    chatwoot_webhook_url?: string | null
    auth_token_chatwoot?: string | null
    n8n_webhook_url?: string | null
    auth_token_n8n?: string | null
    crm_webhook_url?: string | null
    auth_token_crm?: string | null
    typebot_webhook_url?: string | null
    auth_token_typebot?: string | null
    rabbitmq_exchange?: string | null
    rabbitmq_queue?: string | null
    rabbitmq_routing_key?: string | null
  }

  export type whatsappOficialUpdateWithoutCompanyInput = {
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
    sendMessageWhatsApp?: sendMessageWhatsAppUpdateManyWithoutWhatsNestedInput
  }

  export type whatsappOficialUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
    sendMessageWhatsApp?: sendMessageWhatsAppUncheckedUpdateManyWithoutWhatsNestedInput
  }

  export type whatsappOficialUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    phone_number_id?: StringFieldUpdateOperationsInput | string
    waba_id?: StringFieldUpdateOperationsInput | string
    send_token?: StringFieldUpdateOperationsInput | string
    business_id?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    use_rabbitmq?: BoolFieldUpdateOperationsInput | boolean
    token_mult100?: StringFieldUpdateOperationsInput | string
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chatwoot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_chatwoot?: NullableStringFieldUpdateOperationsInput | string | null
    n8n_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_n8n?: NullableStringFieldUpdateOperationsInput | string | null
    crm_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_crm?: NullableStringFieldUpdateOperationsInput | string | null
    typebot_webhook_url?: NullableStringFieldUpdateOperationsInput | string | null
    auth_token_typebot?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_exchange?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_queue?: NullableStringFieldUpdateOperationsInput | string | null
    rabbitmq_routing_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sendMessageWhatsAppCreateManyWhatsInput = {
    id?: number
    create_at?: Date | string | null
    update_at?: Date | string | null
    deleted_at?: Date | string | null
    type: $Enums.typeMessage
    to: string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: boolean
    pathFile?: string | null
    idFileMeta?: string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppUpdateWithoutWhatsInput = {
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: EnumtypeMessageFieldUpdateOperationsInput | $Enums.typeMessage
    to?: StringFieldUpdateOperationsInput | string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: BoolFieldUpdateOperationsInput | boolean
    pathFile?: NullableStringFieldUpdateOperationsInput | string | null
    idFileMeta?: NullableStringFieldUpdateOperationsInput | string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppUncheckedUpdateWithoutWhatsInput = {
    id?: IntFieldUpdateOperationsInput | number
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: EnumtypeMessageFieldUpdateOperationsInput | $Enums.typeMessage
    to?: StringFieldUpdateOperationsInput | string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: BoolFieldUpdateOperationsInput | boolean
    pathFile?: NullableStringFieldUpdateOperationsInput | string | null
    idFileMeta?: NullableStringFieldUpdateOperationsInput | string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }

  export type sendMessageWhatsAppUncheckedUpdateManyWithoutWhatsInput = {
    id?: IntFieldUpdateOperationsInput | number
    create_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type?: EnumtypeMessageFieldUpdateOperationsInput | $Enums.typeMessage
    to?: StringFieldUpdateOperationsInput | string
    text?: NullableJsonNullValueInput | InputJsonValue
    reaction?: NullableJsonNullValueInput | InputJsonValue
    audio?: NullableJsonNullValueInput | InputJsonValue
    document?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableJsonNullValueInput | InputJsonValue
    sticker?: NullableJsonNullValueInput | InputJsonValue
    video?: NullableJsonNullValueInput | InputJsonValue
    location?: NullableJsonNullValueInput | InputJsonValue
    contacts?: NullableJsonNullValueInput | InputJsonValue
    interactive?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableJsonNullValueInput | InputJsonValue
    enviada?: BoolFieldUpdateOperationsInput | boolean
    pathFile?: NullableStringFieldUpdateOperationsInput | string | null
    idFileMeta?: NullableStringFieldUpdateOperationsInput | string | null
    idMessageWhatsApp?: NullableJsonNullValueInput | InputJsonValue
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CompanyCountOutputTypeDefaultArgs instead
     */
    export type CompanyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WhatsappOficialCountOutputTypeDefaultArgs instead
     */
    export type WhatsappOficialCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WhatsappOficialCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use companyDefaultArgs instead
     */
    export type companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = companyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use whatsappOficialDefaultArgs instead
     */
    export type whatsappOficialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = whatsappOficialDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sendMessageWhatsAppDefaultArgs instead
     */
    export type sendMessageWhatsAppArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sendMessageWhatsAppDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}