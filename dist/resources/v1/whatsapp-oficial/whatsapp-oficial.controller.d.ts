import { WhatsappOficialService } from './whatsapp-oficial.service';
import { CreateWhatsappOficialDto } from './dto/create-whatsapp-oficial.dto';
import { UpdateWhatsappOficialDto } from './dto/update-whatsapp-oficial.dto';
import { IRequest } from 'src/@core/global-interfaces/iRequest.interface';
export declare class WhatsappOficialController {
    private readonly whatsappOficialService;
    constructor(whatsappOficialService: WhatsappOficialService);
    getOne(id: number): Promise<{
        id: number;
        create_at: Date | null;
        update_at: Date | null;
        deleted_at: Date | null;
        chatwoot_webhook_url: string | null;
        auth_token_chatwoot: string | null;
        n8n_webhook_url: string | null;
        auth_token_n8n: string | null;
        crm_webhook_url: string | null;
        auth_token_crm: string | null;
        typebot_webhook_url: string | null;
        auth_token_typebot: string | null;
        use_rabbitmq: boolean;
        token_mult100: string;
        phone_number_id: string;
        waba_id: string;
        send_token: string;
        business_id: string;
        phone_number: string;
        rabbitmq_routing_key: string | null;
        companyId: number;
        rabbitmq_exchange: string | null;
        rabbitmq_queue: string | null;
    }>;
    getMore(data: CreateWhatsappOficialDto): Promise<{
        id: number;
        create_at: Date | null;
        update_at: Date | null;
        deleted_at: Date | null;
        chatwoot_webhook_url: string | null;
        auth_token_chatwoot: string | null;
        n8n_webhook_url: string | null;
        auth_token_n8n: string | null;
        crm_webhook_url: string | null;
        auth_token_crm: string | null;
        typebot_webhook_url: string | null;
        auth_token_typebot: string | null;
        use_rabbitmq: boolean;
        token_mult100: string;
        phone_number_id: string;
        waba_id: string;
        send_token: string;
        business_id: string;
        phone_number: string;
        rabbitmq_routing_key: string | null;
        companyId: number;
        rabbitmq_exchange: string | null;
        rabbitmq_queue: string | null;
    }[]>;
    create(data: CreateWhatsappOficialDto): Promise<import("../../../@core/domain/entities/whatsappOficial.model").WhatsAppOficial>;
    update(id: number, data: UpdateWhatsappOficialDto): Promise<import("../../../@core/domain/entities/whatsappOficial.model").WhatsAppOficial>;
    delete(id: number, req: IRequest): Promise<import("../../../@core/domain/entities/whatsappOficial.model").WhatsAppOficial>;
}
