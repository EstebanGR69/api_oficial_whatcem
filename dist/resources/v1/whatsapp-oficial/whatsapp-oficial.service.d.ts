import { Logger } from '@nestjs/common';
import { CreateWhatsappOficialDto } from './dto/create-whatsapp-oficial.dto';
import { UpdateWhatsappOficialDto } from './dto/update-whatsapp-oficial.dto';
import { BaseService } from 'src/@core/base/base.service';
import { WhatsAppOficial } from 'src/@core/domain/entities/whatsappOficial.model';
export declare class WhatsappOficialService extends BaseService<WhatsAppOficial> {
    logger: Logger;
    constructor();
    oneWhatAppOficial(id: number): Promise<{
        id: number;
        create_at: Date | null;
        update_at: Date | null;
        deleted_at: Date | null;
        chatwoot_webhook_url: string | null;
        auth_token_chatwoot: string | null;
        n8n_webhook_url: string | null;
        auth_token_n8n: string | null;
        crm_webhook_url: string | null;
        auth_token_crm: string | null;
        typebot_webhook_url: string | null;
        auth_token_typebot: string | null;
        use_rabbitmq: boolean;
        token_mult100: string;
        phone_number_id: string;
        waba_id: string;
        send_token: string;
        business_id: string;
        phone_number: string;
        rabbitmq_routing_key: string | null;
        companyId: number;
        rabbitmq_exchange: string | null;
        rabbitmq_queue: string | null;
    }>;
    allWhatsAppOficial(): Promise<{
        id: number;
        create_at: Date | null;
        update_at: Date | null;
        deleted_at: Date | null;
        chatwoot_webhook_url: string | null;
        auth_token_chatwoot: string | null;
        n8n_webhook_url: string | null;
        auth_token_n8n: string | null;
        crm_webhook_url: string | null;
        auth_token_crm: string | null;
        typebot_webhook_url: string | null;
        auth_token_typebot: string | null;
        use_rabbitmq: boolean;
        token_mult100: string;
        phone_number_id: string;
        waba_id: string;
        send_token: string;
        business_id: string;
        phone_number: string;
        rabbitmq_routing_key: string | null;
        companyId: number;
        rabbitmq_exchange: string | null;
        rabbitmq_queue: string | null;
    }[]>;
    createWhatsAppOficial(data: CreateWhatsappOficialDto): Promise<WhatsAppOficial>;
    updateWhatsAppOficial(id: number, data: UpdateWhatsappOficialDto): Promise<WhatsAppOficial>;
    deleteWhatsAppOficial(id: number): Promise<WhatsAppOficial>;
}
